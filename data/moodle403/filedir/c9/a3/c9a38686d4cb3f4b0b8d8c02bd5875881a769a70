var H5P = H5P || {};

/**
 * Constructor.
 *
 * @param {Object} params Options for this library.
 * @param {Number} id Content identifier
 * @returns {undefined}
 */
(function ($) {
  H5P.Image = function (params, id, extras) {
    H5P.EventDispatcher.call(this);
    this.extras = extras;

    if (params.file === undefined || !(params.file instanceof Object)) {
      this.placeholder = true;
    }
    else {
      this.source = H5P.getPath(params.file.path, id);
      this.width = params.file.width;
      this.height = params.file.height;
    }

    this.alt = params.alt !== undefined ? params.alt : '';

    if (params.title !== undefined) {
      this.title = params.title;
    }
  };

  H5P.Image.prototype = Object.create(H5P.EventDispatcher.prototype);
  H5P.Image.prototype.constructor = H5P.Image;

  /**
   * Wipe out the content of the wrapper and put our HTML in it.
   *
   * @param {jQuery} $wrapper
   * @returns {undefined}
   */
  H5P.Image.prototype.attach = function ($wrapper) {
    var self = this;
    var source = this.source;

    if (self.$img === undefined) {
      if(self.placeholder) {
        self.$img = $('<div>', {
          width: '100%',
          height: '100%',
          class: 'h5p-placeholder',
          title: this.title === undefined ? '' : this.title,
          on: {
            load: function () {
              self.trigger('loaded');
            }
          }
        });
      } else {
        self.$img = $('<img>', {
          width: '100%',
          height: '100%',
          src: source,
          alt: this.alt,
          title: this.title === undefined ? '' : this.title,
          on: {
            load: function () {
              self.trigger('loaded');
            }
          }
        });
      }
    }

    $wrapper.addClass('h5p-image').html(self.$img);
  };

  return H5P.Image;
}(H5P.jQuery));
;
var H5P = H5P || {};
/**
 * Transition contains helper function relevant for transitioning
 */
H5P.Transition = (function ($) {

  /**
   * @class
   * @namespace H5P
   */
  Transition = {};

  /**
   * @private
   */
  Transition.transitionEndEventNames = {
    'WebkitTransition': 'webkitTransitionEnd',
    'transition':       'transitionend',
    'MozTransition':    'transitionend',
    'OTransition':      'oTransitionEnd',
    'msTransition':     'MSTransitionEnd'
  };

  /**
   * @private
   */
  Transition.cache = [];

  /**
   * Get the vendor property name for an event
   *
   * @function H5P.Transition.getVendorPropertyName
   * @static
   * @private
   * @param  {string} prop Generic property name
   * @return {string}      Vendor specific property name
   */
  Transition.getVendorPropertyName = function (prop) {

    if (Transition.cache[prop] !== undefined) {
      return Transition.cache[prop];
    }

    var div = document.createElement('div');

    // Handle unprefixed versions (FF16+, for example)
    if (prop in div.style) {
      Transition.cache[prop] = prop;
    }
    else {
      var prefixes = ['Moz', 'Webkit', 'O', 'ms'];
      var prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);

      if (prop in div.style) {
        Transition.cache[prop] = prop;
      }
      else {
        for (var i = 0; i < prefixes.length; ++i) {
          var vendorProp = prefixes[i] + prop_;
          if (vendorProp in div.style) {
            Transition.cache[prop] = vendorProp;
            break;
          }
        }
      }
    }

    return Transition.cache[prop];
  };

  /**
   * Get the name of the transition end event
   *
   * @static
   * @private
   * @return {string}  description
   */
  Transition.getTransitionEndEventName = function () {
    return Transition.transitionEndEventNames[Transition.getVendorPropertyName('transition')] || undefined;
  };

  /**
   * Helper function for listening on transition end events
   *
   * @function H5P.Transition.onTransitionEnd
   * @static
   * @param  {domElement} $element The element which is transitioned
   * @param  {function} callback The callback to be invoked when transition is finished
   * @param  {number} timeout  Timeout in milliseconds. Fallback if transition event is never fired
   */
  Transition.onTransitionEnd = function ($element, callback, timeout) {
    // Fallback on 1 second if transition event is not supported/triggered
    timeout = timeout || 1000;
    Transition.transitionEndEventName = Transition.transitionEndEventName || Transition.getTransitionEndEventName();
    var callbackCalled = false;

    var doCallback = function () {
      if (callbackCalled) {
        return;
      }
      $element.off(Transition.transitionEndEventName, callback);
      callbackCalled = true;
      clearTimeout(timer);
      callback();
    };

    var timer = setTimeout(function () {
      doCallback();
    }, timeout);

    $element.on(Transition.transitionEndEventName, function () {
      doCallback();
    });
  };

  /**
   * Wait for a transition - when finished, invokes next in line
   *
   * @private
   *
   * @param {Object[]}    transitions             Array of transitions
   * @param {H5P.jQuery}  transitions[].$element  Dom element transition is performed on
   * @param {number=}     transitions[].timeout   Timeout fallback if transition end never is triggered
   * @param {bool=}       transitions[].break     If true, sequence breaks after this transition
   * @param {number}      index                   The index for current transition
   */
  var runSequence = function (transitions, index) {
    if (index >= transitions.length) {
      return;
    }

    var transition = transitions[index];
    H5P.Transition.onTransitionEnd(transition.$element, function () {
      if (transition.end) {
        transition.end();
      }
      if (transition.break !== true) {
        runSequence(transitions, index+1);
      }
    }, transition.timeout || undefined);
  };

  /**
   * Run a sequence of transitions
   *
   * @function H5P.Transition.sequence
   * @static
   * @param {Object[]}    transitions             Array of transitions
   * @param {H5P.jQuery}  transitions[].$element  Dom element transition is performed on
   * @param {number=}     transitions[].timeout   Timeout fallback if transition end never is triggered
   * @param {bool=}       transitions[].break     If true, sequence breaks after this transition
   */
  Transition.sequence = function (transitions) {
    runSequence(transitions, 0);
  };

  return Transition;
})(H5P.jQuery);
;
var H5P = H5P || {};

/**
 * Class responsible for creating a help text dialog
 */
H5P.JoubelHelpTextDialog = (function ($) {

  var numInstances = 0;
  /**
   * Display a pop-up containing a message.
   *
   * @param {H5P.jQuery}  $container  The container which message dialog will be appended to
   * @param {string}      message     The message
   * @param {string}      closeButtonTitle The title for the close button
   * @return {H5P.jQuery}
   */
  function JoubelHelpTextDialog(header, message, closeButtonTitle) {
    H5P.EventDispatcher.call(this);

    var self = this;

    numInstances++;
    var headerId = 'joubel-help-text-header-' + numInstances;
    var helpTextId = 'joubel-help-text-body-' + numInstances;

    var $helpTextDialogBox = $('<div>', {
      'class': 'joubel-help-text-dialog-box',
      'role': 'dialog',
      'aria-labelledby': headerId,
      'aria-describedby': helpTextId
    });

    $('<div>', {
      'class': 'joubel-help-text-dialog-background'
    }).appendTo($helpTextDialogBox);

    var $helpTextDialogContainer = $('<div>', {
      'class': 'joubel-help-text-dialog-container'
    }).appendTo($helpTextDialogBox);

    $('<div>', {
      'class': 'joubel-help-text-header',
      'id': headerId,
      'role': 'header',
      'html': header
    }).appendTo($helpTextDialogContainer);

    $('<div>', {
      'class': 'joubel-help-text-body',
      'id': helpTextId,
      'html': message,
      'role': 'document',
      'tabindex': 0
    }).appendTo($helpTextDialogContainer);

    var handleClose = function () {
      $helpTextDialogBox.remove();
      self.trigger('closed');
    };

    var $closeButton = $('<div>', {
      'class': 'joubel-help-text-remove',
      'role': 'button',
      'title': closeButtonTitle,
      'tabindex': 1,
      'click': handleClose,
      'keydown': function (event) {
        // 32 - space, 13 - enter
        if ([32, 13].indexOf(event.which) !== -1) {
          event.preventDefault();
          handleClose();
        }
      }
    }).appendTo($helpTextDialogContainer);

    /**
     * Get the DOM element
     * @return {HTMLElement}
     */
    self.getElement = function () {
      return $helpTextDialogBox;
    };

    self.focus = function () {
      $closeButton.focus();
    };
  }

  JoubelHelpTextDialog.prototype = Object.create(H5P.EventDispatcher.prototype);
  JoubelHelpTextDialog.prototype.constructor = JoubelHelpTextDialog;

  return JoubelHelpTextDialog;
}(H5P.jQuery));
;
var H5P = H5P || {};

/**
 * Class responsible for creating auto-disappearing dialogs
 */
H5P.JoubelMessageDialog = (function ($) {

  /**
   * Display a pop-up containing a message.
   *
   * @param {H5P.jQuery} $container The container which message dialog will be appended to
   * @param {string} message The message
   * @return {H5P.jQuery}
   */
  function JoubelMessageDialog ($container, message) {
    var timeout;

    var removeDialog = function () {
      $warning.remove();
      clearTimeout(timeout);
      $container.off('click.messageDialog');
    };

    // Create warning popup:
    var $warning = $('<div/>', {
      'class': 'joubel-message-dialog',
      text: message
    }).appendTo($container);

    // Remove after 3 seconds or if user clicks anywhere in $container:
    timeout = setTimeout(removeDialog, 3000);
    $container.on('click.messageDialog', removeDialog);

    return $warning;
  }

  return JoubelMessageDialog;
})(H5P.jQuery);
;
var H5P = H5P || {};

/**
 * Class responsible for creating a circular progress bar
 */

H5P.JoubelProgressCircle = (function ($) {

  /**
   * Constructor for the Progress Circle
   *
   * @param {Number} number The amount of progress to display
   * @param {string} progressColor Color for the progress meter
   * @param {string} backgroundColor Color behind the progress meter
   */
  function ProgressCircle(number, progressColor, fillColor, backgroundColor) {
    progressColor = progressColor || '#1a73d9';
    fillColor = fillColor || '#f0f0f0';
    backgroundColor = backgroundColor || '#ffffff';
    var progressColorRGB = this.hexToRgb(progressColor);

    //Verify number
    try {
      number = Number(number);
      if (number === '') {
        throw 'is empty';
      }
      if (isNaN(number)) {
        throw 'is not a number';
      }
    } catch (e) {
      number = 'err';
    }

    //Draw circle
    if (number > 100) {
      number = 100;
    }

    // We can not use rgba, since they will stack on top of each other.
    // Instead we create the equivalent of the rgba color
    // and applies this to the activeborder and background color.
    var progressColorString = 'rgb(' + parseInt(progressColorRGB.r, 10) +
      ',' + parseInt(progressColorRGB.g, 10) +
      ',' + parseInt(progressColorRGB.b, 10) + ')';

    // Circle wrapper
    var $wrapper = $('<div/>', {
      'class': "joubel-progress-circle-wrapper"
    });

    //Active border indicates progress
    var $activeBorder = $('<div/>', {
      'class': "joubel-progress-circle-active-border"
    }).appendTo($wrapper);

    //Background circle
    var $backgroundCircle = $('<div/>', {
      'class': "joubel-progress-circle-circle"
    }).appendTo($activeBorder);

    //Progress text/number
    $('<span/>', {
      'text': number + '%',
      'class': "joubel-progress-circle-percentage"
    }).appendTo($backgroundCircle);

    var deg = number * 3.6;
    if (deg <= 180) {
      $activeBorder.css('background-image',
        'linear-gradient(' + (90 + deg) + 'deg, transparent 50%, ' + fillColor + ' 50%),' +
        'linear-gradient(90deg, ' + fillColor + ' 50%, transparent 50%)')
        .css('border', '2px solid' + backgroundColor)
        .css('background-color', progressColorString);
    } else {
      $activeBorder.css('background-image',
        'linear-gradient(' + (deg - 90) + 'deg, transparent 50%, ' + progressColorString + ' 50%),' +
        'linear-gradient(90deg, ' + fillColor + ' 50%, transparent 50%)')
        .css('border', '2px solid' + backgroundColor)
        .css('background-color', progressColorString);
    }

    this.$activeBorder = $activeBorder;
    this.$backgroundCircle = $backgroundCircle;
    this.$wrapper = $wrapper;

    this.initResizeFunctionality();

    return $wrapper;
  }

  /**
   * Initializes resize functionality for the progress circle
   */
  ProgressCircle.prototype.initResizeFunctionality = function () {
    var self = this;

    $(window).resize(function () {
      // Queue resize
      setTimeout(function () {
        self.resize();
      });
    });

    // First resize
    setTimeout(function () {
      self.resize();
    }, 0);
  };

  /**
   * Resize function makes progress circle grow or shrink relative to parent container
   */
  ProgressCircle.prototype.resize = function () {
    var $parent = this.$wrapper.parent();

    if ($parent !== undefined && $parent) {

      // Measurements
      var fontSize = parseInt($parent.css('font-size'), 10);

      // Static sizes
      var fontSizeMultiplum = 3.75;
      var progressCircleWidthPx = parseInt((fontSize / 4.5), 10) % 2 === 0 ? parseInt((fontSize / 4.5), 10) + 4 : parseInt((fontSize / 4.5), 10) + 5;
      var progressCircleOffset = progressCircleWidthPx / 2;

      var width = fontSize * fontSizeMultiplum;
      var height = fontSize * fontSizeMultiplum;
      this.$activeBorder.css({
        'width': width,
        'height': height
      });

      this.$backgroundCircle.css({
        'width': width - progressCircleWidthPx,
        'height': height - progressCircleWidthPx,
        'top': progressCircleOffset,
        'left': progressCircleOffset
      });
    }
  };

  /**
   * Hex to RGB conversion
   * @param hex
   * @returns {{r: Number, g: Number, b: Number}}
   */
  ProgressCircle.prototype.hexToRgb = function (hex) {
    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
    return result ? {
      r: parseInt(result[1], 16),
      g: parseInt(result[2], 16),
      b: parseInt(result[3], 16)
    } : null;
  };

  return ProgressCircle;

}(H5P.jQuery));
;
var H5P = H5P || {};

H5P.SimpleRoundedButton = (function ($) {

  /**
   * Creates a new tip
   */
  function SimpleRoundedButton(text) {

    var $simpleRoundedButton = $('<div>', {
      'class': 'joubel-simple-rounded-button',
      'title': text,
      'role': 'button',
      'tabindex': '0'
    }).keydown(function (e) {
      // 32 - space, 13 - enter
      if ([32, 13].indexOf(e.which) !== -1) {
        $(this).click();
        e.preventDefault();
      }
    });

    $('<span>', {
      'class': 'joubel-simple-rounded-button-text',
      'html': text
    }).appendTo($simpleRoundedButton);

    return $simpleRoundedButton;
  }

  return SimpleRoundedButton;
}(H5P.jQuery));
;
var H5P = H5P || {};

/**
 * Class responsible for creating speech bubbles
 */
H5P.JoubelSpeechBubble = (function ($) {

  var $currentSpeechBubble;
  var $currentContainer;  
  var $tail;
  var $innerTail;
  var removeSpeechBubbleTimeout;
  var currentMaxWidth;

  var DEFAULT_MAX_WIDTH = 400;

  var iDevice = navigator.userAgent.match(/iPod|iPhone|iPad/g) ? true : false;

  /**
   * Creates a new speech bubble
   *
   * @param {H5P.jQuery} $container The speaking object
   * @param {string} text The text to display
   * @param {number} maxWidth The maximum width of the bubble
   * @return {H5P.JoubelSpeechBubble}
   */
  function JoubelSpeechBubble($container, text, maxWidth) {
    maxWidth = maxWidth || DEFAULT_MAX_WIDTH;
    currentMaxWidth = maxWidth;
    $currentContainer = $container;

    this.isCurrent = function ($tip) {
      return $tip.is($currentContainer);
    };

    this.remove = function () {
      remove();
    };

    var fadeOutSpeechBubble = function ($speechBubble) {
      if (!$speechBubble) {
        return;
      }

      // Stop removing bubble
      clearTimeout(removeSpeechBubbleTimeout);

      $speechBubble.removeClass('show');
      setTimeout(function () {
        if ($speechBubble) {
          $speechBubble.remove();
          $speechBubble = undefined;
        }
      }, 500);
    };

    if ($currentSpeechBubble !== undefined) {
      remove();
    }

    var $h5pContainer = getH5PContainer($container);

    // Make sure we fade out old speech bubble
    fadeOutSpeechBubble($currentSpeechBubble);

    // Create bubble
    $tail = $('<div class="joubel-speech-bubble-tail"></div>');
    $innerTail = $('<div class="joubel-speech-bubble-inner-tail"></div>');
    var $innerBubble = $(
      '<div class="joubel-speech-bubble-inner">' +
      '<div class="joubel-speech-bubble-text">' + text + '</div>' +
      '</div>'
    ).prepend($innerTail);

    $currentSpeechBubble = $(
      '<div class="joubel-speech-bubble" aria-live="assertive">'
    ).append([$tail, $innerBubble])
      .appendTo($h5pContainer);

    // Show speech bubble with transition
    setTimeout(function () {
      $currentSpeechBubble.addClass('show');
    }, 0);

    position($currentSpeechBubble, $currentContainer, maxWidth, $tail, $innerTail);

    // Handle click to close
    H5P.$body.on('mousedown.speechBubble', handleOutsideClick);

    // Handle window resizing
    H5P.$window.on('resize', '', handleResize);

    // Handle clicks when inside IV which blocks bubbling.
    $container.parents('.h5p-dialog')
      .on('mousedown.speechBubble', handleOutsideClick);

    if (iDevice) {
      H5P.$body.css('cursor', 'pointer');
    }

    return this;
  }

  // Remove speechbubble if it belongs to a dom element that is about to be hidden
  H5P.externalDispatcher.on('domHidden', function (event) {
    if ($currentSpeechBubble !== undefined && event.data.$dom.find($currentContainer).length !== 0) {
      remove();
    }
  });

  /**
   * Returns the closest h5p container for the given DOM element.
   * 
   * @param {object} $container jquery element
   * @return {object} the h5p container (jquery element)
   */
  function getH5PContainer($container) {
    var $h5pContainer = $container.closest('.h5p-frame');

    // Check closest h5p frame first, then check for container in case there is no frame.
    if (!$h5pContainer.length) {
      $h5pContainer = $container.closest('.h5p-container');
    }

    return $h5pContainer;
  }

  /**
   * Event handler that is called when the window is resized.
   */
  function handleResize() {
    position($currentSpeechBubble, $currentContainer, currentMaxWidth, $tail, $innerTail);
  }

  /**
   * Repositions the speech bubble according to the position of the container.
   * 
   * @param {object} $currentSpeechbubble the speech bubble that should be positioned   
   * @param {object} $container the container to which the speech bubble should point 
   * @param {number} maxWidth the maximum width of the speech bubble
   * @param {object} $tail the tail (the triangle that points to the referenced container)
   * @param {object} $innerTail the inner tail (the triangle that points to the referenced container)
   */
  function position($currentSpeechBubble, $container, maxWidth, $tail, $innerTail) {
    var $h5pContainer = getH5PContainer($container);

    // Calculate offset between the button and the h5p frame
    var offset = getOffsetBetween($h5pContainer, $container);

    var direction = (offset.bottom > offset.top ? 'bottom' : 'top');
    var tipWidth = offset.outerWidth * 0.9; // Var needs to be renamed to make sense
    var bubbleWidth = tipWidth > maxWidth ? maxWidth : tipWidth;

    var bubblePosition = getBubblePosition(bubbleWidth, offset);
    var tailPosition = getTailPosition(bubbleWidth, bubblePosition, offset, $container.width());
    // Need to set font-size, since element is appended to body.
    // Using same font-size as parent. In that way it will grow accordingly
    // when resizing
    var fontSize = 16;//parseFloat($parent.css('font-size'));

    // Set width and position of speech bubble
    $currentSpeechBubble.css(bubbleCSS(
      direction,
      bubbleWidth,
      bubblePosition,
      fontSize
    ));

    var preparedTailCSS = tailCSS(direction, tailPosition);
    $tail.css(preparedTailCSS);
    $innerTail.css(preparedTailCSS);
  }

  /**
   * Static function for removing the speechbubble
   */
  var remove = function () {
    H5P.$body.off('mousedown.speechBubble');
    H5P.$window.off('resize', '', handleResize);
    $currentContainer.parents('.h5p-dialog').off('mousedown.speechBubble');
    if (iDevice) {
      H5P.$body.css('cursor', '');
    }
    if ($currentSpeechBubble !== undefined) {
      // Apply transition, then remove speech bubble
      $currentSpeechBubble.removeClass('show');

      // Make sure we remove any old timeout before reassignment
      clearTimeout(removeSpeechBubbleTimeout);
      removeSpeechBubbleTimeout = setTimeout(function () {
        $currentSpeechBubble.remove();
        $currentSpeechBubble = undefined;
      }, 500);
    }
    // Don't return false here. If the user e.g. clicks a button when the bubble is visible,
    // we want the bubble to disapear AND the button to receive the event
  };

  /**
   * Remove the speech bubble and container reference
   */
  function handleOutsideClick(event) {
    if (event.target === $currentContainer[0]) {
      return; // Button clicks are not outside clicks
    }

    remove();
    // There is no current container when a container isn't clicked
    $currentContainer = undefined;
  }

  /**
   * Calculate position for speech bubble
   *
   * @param {number} bubbleWidth The width of the speech bubble
   * @param {object} offset
   * @return {object} Return position for the speech bubble
   */
  function getBubblePosition(bubbleWidth, offset) {
    var bubblePosition = {};

    var tailOffset = 9;
    var widthOffset = bubbleWidth / 2;

    // Calculate top position
    bubblePosition.top = offset.top + offset.innerHeight;

    // Calculate bottom position
    bubblePosition.bottom = offset.bottom + offset.innerHeight + tailOffset;

    // Calculate left position
    if (offset.left < widthOffset) {
      bubblePosition.left = 3;
    }
    else if ((offset.left + widthOffset) > offset.outerWidth) {
      bubblePosition.left = offset.outerWidth - bubbleWidth - 3;
    }
    else {
      bubblePosition.left = offset.left - widthOffset + (offset.innerWidth / 2);
    }

    return bubblePosition;
  }

  /**
   * Calculate position for speech bubble tail
   *
   * @param {number} bubbleWidth The width of the speech bubble
   * @param {object} bubblePosition Speech bubble position
   * @param {object} offset
   * @param {number} iconWidth The width of the tip icon
   * @return {object} Return position for the tail
   */
  function getTailPosition(bubbleWidth, bubblePosition, offset, iconWidth) {
    var tailPosition = {};
    // Magic numbers. Tuned by hand so that the tail fits visually within
    // the bounds of the speech bubble.
    var leftBoundary = 9;
    var rightBoundary = bubbleWidth - 20;

    tailPosition.left = offset.left - bubblePosition.left + (iconWidth / 2) - 6;
    if (tailPosition.left < leftBoundary) {
      tailPosition.left = leftBoundary;
    }
    if (tailPosition.left > rightBoundary) {
      tailPosition.left = rightBoundary;
    }

    tailPosition.top = -6;
    tailPosition.bottom = -6;

    return tailPosition;
  }

  /**
   * Return bubble CSS for the desired growth direction
   *
   * @param {string} direction The direction the speech bubble will grow
   * @param {number} width The width of the speech bubble
   * @param {object} position Speech bubble position
   * @param {number} fontSize The size of the bubbles font
   * @return {object} Return CSS
   */
  function bubbleCSS(direction, width, position, fontSize) {
    if (direction === 'top') {
      return {
        width: width + 'px',
        bottom: position.bottom + 'px',
        left: position.left + 'px',
        fontSize: fontSize + 'px',
        top: ''
      };
    }
    else {
      return {
        width: width + 'px',
        top: position.top + 'px',
        left: position.left + 'px',
        fontSize: fontSize + 'px',
        bottom: ''
      };
    }
  }

  /**
   * Return tail CSS for the desired growth direction
   *
   * @param {string} direction The direction the speech bubble will grow
   * @param {object} position Tail position
   * @return {object} Return CSS
   */
  function tailCSS(direction, position) {
    if (direction === 'top') {
      return {
        bottom: position.bottom + 'px',
        left: position.left + 'px',
        top: ''
      };
    }
    else {
      return {
        top: position.top + 'px',
        left: position.left + 'px',
        bottom: ''
      };
    }
  }

  /**
   * Calculates the offset between an element inside a container and the
   * container. Only works if all the edges of the inner element are inside the
   * outer element.
   * Width/height of the elements is included as a convenience.
   *
   * @param {H5P.jQuery} $outer
   * @param {H5P.jQuery} $inner
   * @return {object} Position offset
   */
  function getOffsetBetween($outer, $inner) {
    var outer = $outer[0].getBoundingClientRect();
    var inner = $inner[0].getBoundingClientRect();

    return {
      top: inner.top - outer.top,
      right: outer.right - inner.right,
      bottom: outer.bottom - inner.bottom,
      left: inner.left - outer.left,
      innerWidth: inner.width,
      innerHeight: inner.height,
      outerWidth: outer.width,
      outerHeight: outer.height
    };
  }

  return JoubelSpeechBubble;
})(H5P.jQuery);
;
var H5P = H5P || {};

H5P.JoubelThrobber = (function ($) {

  /**
   * Creates a new tip
   */
  function JoubelThrobber() {

    // h5p-throbber css is described in core
    var $throbber = $('<div/>', {
      'class': 'h5p-throbber'
    });

    return $throbber;
  }

  return JoubelThrobber;
}(H5P.jQuery));
;
H5P.JoubelTip = (function ($) {
  var $conv = $('<div/>');

  /**
   * Creates a new tip element.
   *
   * NOTE that this may look like a class but it doesn't behave like one.
   * It returns a jQuery object.
   *
   * @param {string} tipHtml The text to display in the popup
   * @param {Object} [behaviour] Options
   * @param {string} [behaviour.tipLabel] Set to use a custom label for the tip button (you want this for good A11Y)
   * @param {boolean} [behaviour.helpIcon] Set to 'true' to Add help-icon classname to Tip button (changes the icon)
   * @param {boolean} [behaviour.showSpeechBubble] Set to 'false' to disable functionality (you may this in the editor)
   * @param {boolean} [behaviour.tabcontrol] Set to 'true' if you plan on controlling the tabindex in the parent (tabindex="-1")
   * @return {H5P.jQuery|undefined} Tip button jQuery element or 'undefined' if invalid tip
   */
  function JoubelTip(tipHtml, behaviour) {

    // Keep track of the popup that appears when you click the Tip button
    var speechBubble;

    // Parse tip html to determine text
    var tipText = $conv.html(tipHtml).text().trim();
    if (tipText === '') {
      return; // The tip has no textual content, i.e. it's invalid.
    }

    // Set default behaviour
    behaviour = $.extend({
      tipLabel: tipText,
      helpIcon: false,
      showSpeechBubble: true,
      tabcontrol: false
    }, behaviour);

    // Create Tip button
    var $tipButton = $('<div/>', {
      class: 'joubel-tip-container' + (behaviour.showSpeechBubble ? '' : ' be-quiet'),
      'aria-label': behaviour.tipLabel,
      'aria-expanded': false,
      role: 'button',
      tabindex: (behaviour.tabcontrol ? -1 : 0),
      click: function (event) {
        // Toggle show/hide popup
        toggleSpeechBubble();
        event.preventDefault();
      },
      keydown: function (event) {
        if (event.which === 32 || event.which === 13) { // Space & enter key
          // Toggle show/hide popup
          toggleSpeechBubble();
          event.stopPropagation();
          event.preventDefault();
        }
        else { // Any other key
          // Toggle hide popup
          toggleSpeechBubble(false);
        }
      },
      // Add markup to render icon
      html: '<span class="joubel-icon-tip-normal ' + (behaviour.helpIcon ? ' help-icon': '') + '">' +
              '<span class="h5p-icon-shadow"></span>' +
              '<span class="h5p-icon-speech-bubble"></span>' +
              '<span class="h5p-icon-info"></span>' +
            '</span>'
      // IMPORTANT: All of the markup elements must have 'pointer-events: none;'
    });

    const $tipAnnouncer = $('<div>', {
      'class': 'hidden-but-read',
      'aria-live': 'polite',
      appendTo: $tipButton,
    });

    /**
     * Tip button interaction handler.
     * Toggle show or hide the speech bubble popup when interacting with the
     * Tip button.
     *
     * @private
     * @param {boolean} [force] 'true' shows and 'false' hides.
     */
    var toggleSpeechBubble = function (force) {
      if (speechBubble !== undefined && speechBubble.isCurrent($tipButton)) {
        // Hide current popup
        speechBubble.remove();
        speechBubble = undefined;

        $tipButton.attr('aria-expanded', false);
        $tipAnnouncer.html('');
      }
      else if (force !== false && behaviour.showSpeechBubble) {
        // Create and show new popup
        speechBubble = H5P.JoubelSpeechBubble($tipButton, tipHtml);
        $tipButton.attr('aria-expanded', true);
        $tipAnnouncer.html(tipHtml);
      }
    };

    return $tipButton;
  }

  return JoubelTip;
})(H5P.jQuery);
;
var H5P = H5P || {};

H5P.JoubelSlider = (function ($) {

  /**
   * Creates a new Slider
   *
   * @param {object} [params] Additional parameters
   */
  function JoubelSlider(params) {
    H5P.EventDispatcher.call(this);

    this.$slider = $('<div>', $.extend({
      'class': 'h5p-joubel-ui-slider'
    }, params));

    this.$slides = [];
    this.currentIndex = 0;
    this.numSlides = 0;
  }
  JoubelSlider.prototype = Object.create(H5P.EventDispatcher.prototype);
  JoubelSlider.prototype.constructor = JoubelSlider;

  JoubelSlider.prototype.addSlide = function ($content) {
    $content.addClass('h5p-joubel-ui-slide').css({
      'left': (this.numSlides*100) + '%'
    });
    this.$slider.append($content);
    this.$slides.push($content);

    this.numSlides++;

    if(this.numSlides === 1) {
      $content.addClass('current');
    }
  };

  JoubelSlider.prototype.attach = function ($container) {
    $container.append(this.$slider);
  };

  JoubelSlider.prototype.move = function (index) {
    var self = this;

    if(index === 0) {
      self.trigger('first-slide');
    }
    if(index+1 === self.numSlides) {
      self.trigger('last-slide');
    }
    self.trigger('move');

    var $previousSlide = self.$slides[this.currentIndex];
    H5P.Transition.onTransitionEnd(this.$slider, function () {
      $previousSlide.removeClass('current');
      self.trigger('moved');
    });
    this.$slides[index].addClass('current');

    var translateX = 'translateX(' + (-index*100) + '%)';
    this.$slider.css({
      '-webkit-transform': translateX,
      '-moz-transform': translateX,
      '-ms-transform': translateX,
      'transform': translateX
    });

    this.currentIndex = index;
  };

  JoubelSlider.prototype.remove = function () {
    this.$slider.remove();
  };

  JoubelSlider.prototype.next = function () {
    if(this.currentIndex+1 >= this.numSlides) {
      return;
    }

    this.move(this.currentIndex+1);
  };

  JoubelSlider.prototype.previous = function () {
    this.move(this.currentIndex-1);
  };

  JoubelSlider.prototype.first = function () {
    this.move(0);
  };

  JoubelSlider.prototype.last = function () {
    this.move(this.numSlides-1);
  };

  return JoubelSlider;
})(H5P.jQuery);
;
var H5P = H5P || {};

/**
 * @module
 */
H5P.JoubelScoreBar = (function ($) {

  /* Need to use an id for the star SVG since that is the only way to reference
     SVG filters  */
  var idCounter = 0;

  /**
   * Creates a score bar
   * @class H5P.JoubelScoreBar
   * @param {number} maxScore  Maximum score
   * @param {string} [label] Makes it easier for readspeakers to identify the scorebar
   * @param {string} [helpText] Score explanation
   * @param {string} [scoreExplanationButtonLabel] Label for score explanation button
   */
  function JoubelScoreBar(maxScore, label, helpText, scoreExplanationButtonLabel) {
    var self = this;

    self.maxScore = maxScore;
    self.score = 0;
    idCounter++;

    /**
     * @const {string}
     */
    self.STAR_MARKUP = '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 63.77 53.87" aria-hidden="true" focusable="false">' +
        '<title>star</title>' +
        '<filter id="h5p-joubelui-score-bar-star-inner-shadow-' + idCounter + '" x0="-50%" y0="-50%" width="200%" height="200%">' +
          '<feGaussianBlur in="SourceAlpha" stdDeviation="3" result="blur"></feGaussianBlur>' +
          '<feOffset dy="2" dx="4"></feOffset>' +
          '<feComposite in2="SourceAlpha" operator="arithmetic" k2="-1" k3="1" result="shadowDiff"></feComposite>' +
          '<feFlood flood-color="#ffe95c" flood-opacity="1"></feFlood>' +
          '<feComposite in2="shadowDiff" operator="in"></feComposite>' +
          '<feComposite in2="SourceGraphic" operator="over" result="firstfilter"></feComposite>' +
          '<feGaussianBlur in="firstfilter" stdDeviation="3" result="blur2"></feGaussianBlur>' +
          '<feOffset dy="-2" dx="-4"></feOffset>' +
          '<feComposite in2="firstfilter" operator="arithmetic" k2="-1" k3="1" result="shadowDiff"></feComposite>' +
          '<feFlood flood-color="#ffe95c" flood-opacity="1"></feFlood>' +
          '<feComposite in2="shadowDiff" operator="in"></feComposite>' +
          '<feComposite in2="firstfilter" operator="over"></feComposite>' +
        '</filter>' +
        '<path class="h5p-joubelui-score-bar-star-shadow" d="M35.08,43.41V9.16H20.91v0L9.51,10.85,9,10.93C2.8,12.18,0,17,0,21.25a11.22,11.22,0,0,0,3,7.48l8.73,8.53-1.07,6.16Z"/>' +
        '<g>' +
          '<path class="h5p-joubelui-score-bar-star-border" d="M61.36,22.8,49.72,34.11l2.78,16a2.6,2.6,0,0,1,.05.64c0,.85-.37,1.6-1.33,1.6A2.74,2.74,0,0,1,49.94,52L35.58,44.41,21.22,52a2.93,2.93,0,0,1-1.28.37c-.91,0-1.33-.75-1.33-1.6,0-.21.05-.43.05-.64l2.78-16L9.8,22.8A2.57,2.57,0,0,1,9,21.25c0-1,1-1.33,1.81-1.49l16.07-2.35L34.09,2.83c.27-.59.85-1.33,1.55-1.33s1.28.69,1.55,1.33l7.21,14.57,16.07,2.35c.75.11,1.81.53,1.81,1.49A3.07,3.07,0,0,1,61.36,22.8Z"/>' +
          '<path class="h5p-joubelui-score-bar-star-fill" d="M61.36,22.8,49.72,34.11l2.78,16a2.6,2.6,0,0,1,.05.64c0,.85-.37,1.6-1.33,1.6A2.74,2.74,0,0,1,49.94,52L35.58,44.41,21.22,52a2.93,2.93,0,0,1-1.28.37c-.91,0-1.33-.75-1.33-1.6,0-.21.05-.43.05-.64l2.78-16L9.8,22.8A2.57,2.57,0,0,1,9,21.25c0-1,1-1.33,1.81-1.49l16.07-2.35L34.09,2.83c.27-.59.85-1.33,1.55-1.33s1.28.69,1.55,1.33l7.21,14.57,16.07,2.35c.75.11,1.81.53,1.81,1.49A3.07,3.07,0,0,1,61.36,22.8Z"/>' +
          '<path filter="url(#h5p-joubelui-score-bar-star-inner-shadow-' + idCounter + ')" class="h5p-joubelui-score-bar-star-fill-full-score" d="M61.36,22.8,49.72,34.11l2.78,16a2.6,2.6,0,0,1,.05.64c0,.85-.37,1.6-1.33,1.6A2.74,2.74,0,0,1,49.94,52L35.58,44.41,21.22,52a2.93,2.93,0,0,1-1.28.37c-.91,0-1.33-.75-1.33-1.6,0-.21.05-.43.05-.64l2.78-16L9.8,22.8A2.57,2.57,0,0,1,9,21.25c0-1,1-1.33,1.81-1.49l16.07-2.35L34.09,2.83c.27-.59.85-1.33,1.55-1.33s1.28.69,1.55,1.33l7.21,14.57,16.07,2.35c.75.11,1.81.53,1.81,1.49A3.07,3.07,0,0,1,61.36,22.8Z"/>' +
        '</g>' +
      '</svg>';

    /**
     * @function appendTo
     * @memberOf H5P.JoubelScoreBar#
     * @param {H5P.jQuery}  $wrapper  Dom container
     */
    self.appendTo = function ($wrapper) {
      self.$scoreBar.appendTo($wrapper);
    };

    /**
     * Create the text representation of the scorebar .
     *
     * @private
     * @return {string}
     */
    var createLabel = function (score) {
      if (!label) {
        return '';
      }

      return label.replace(':num', score).replace(':total', self.maxScore);
    };

    /**
     * Creates the html for this widget
     *
     * @method createHtml
     * @private
     */
    var createHtml = function () {
      // Container div
      self.$scoreBar = $('<div>', {
        'class': 'h5p-joubelui-score-bar',
      });

      var $visuals = $('<div>', {
        'class': 'h5p-joubelui-score-bar-visuals',
        appendTo: self.$scoreBar
      });

      // The progress bar wrapper
      self.$progressWrapper = $('<div>', {
        'class': 'h5p-joubelui-score-bar-progress-wrapper',
        appendTo: $visuals
      });

      self.$progress = $('<div>', {
        'class': 'h5p-joubelui-score-bar-progress',
        'html': createLabel(self.score),
        appendTo: self.$progressWrapper
      });

      // The star
      $('<div>', {
        'class': 'h5p-joubelui-score-bar-star',
        html: self.STAR_MARKUP
      }).appendTo($visuals);

      // The score container
      var $numerics = $('<div>', {
        'class': 'h5p-joubelui-score-numeric',
        appendTo: self.$scoreBar,
        'aria-hidden': true
      });

      // The current score
      self.$scoreCounter = $('<span>', {
        'class': 'h5p-joubelui-score-number h5p-joubelui-score-number-counter',
        text: 0,
        appendTo: $numerics
      });

      // The separator
      $('<span>', {
        'class': 'h5p-joubelui-score-number-separator',
        text: '/',
        appendTo: $numerics
      });

      // Max score
      self.$maxScore = $('<span>', {
        'class': 'h5p-joubelui-score-number h5p-joubelui-score-max',
        text: self.maxScore,
        appendTo: $numerics
      });

      if (helpText) {
        H5P.JoubelUI.createTip(helpText, {
          tipLabel: scoreExplanationButtonLabel ? scoreExplanationButtonLabel : helpText,
          helpIcon: true
        }).appendTo(self.$scoreBar);
        self.$scoreBar.addClass('h5p-score-bar-has-help');
      }
    };

    /**
     * Set the current score
     * @method setScore
     * @memberOf H5P.JoubelScoreBar#
     * @param  {number} score
     */
    self.setScore = function (score) {
      // Do nothing if score hasn't changed
      if (score === self.score) {
        return;
      }
      self.score = score > self.maxScore ? self.maxScore : score;
      self.updateVisuals();
    };

    /**
     * Increment score
     * @method incrementScore
     * @memberOf H5P.JoubelScoreBar#
     * @param  {number=}        incrementBy Optional parameter, defaults to 1
     */
    self.incrementScore = function (incrementBy) {
      self.setScore(self.score + (incrementBy || 1));
    };

    /**
     * Set the max score
     * @method setMaxScore
     * @memberOf H5P.JoubelScoreBar#
     * @param  {number}    maxScore The max score
     */
    self.setMaxScore = function (maxScore) {
      self.maxScore = maxScore;
    };

    /**
     * Updates the progressbar visuals
     * @memberOf H5P.JoubelScoreBar#
     * @method updateVisuals
     */
    self.updateVisuals = function () {
      self.$progress.html(createLabel(self.score));
      self.$scoreCounter.text(self.score);
      self.$maxScore.text(self.maxScore);

      setTimeout(function () {
        // Start the progressbar animation
        self.$progress.css({
          width: ((self.score / self.maxScore) * 100) + '%'
        });

        H5P.Transition.onTransitionEnd(self.$progress, function () {
          // If fullscore fill the star and start the animation
          self.$scoreBar.toggleClass('h5p-joubelui-score-bar-full-score', self.score === self.maxScore);
          self.$scoreBar.toggleClass('h5p-joubelui-score-bar-animation-active', self.score === self.maxScore);

          // Only allow the star animation to run once
          self.$scoreBar.one("animationend", function() {
            self.$scoreBar.removeClass("h5p-joubelui-score-bar-animation-active");
          });
        }, 600);
      }, 300);
    };

    /**
     * Removes all classes
     * @method reset
     */
    self.reset = function () {
      self.$scoreBar.removeClass('h5p-joubelui-score-bar-full-score');
    };

    createHtml();
  }

  return JoubelScoreBar;
})(H5P.jQuery);
;
;
var H5P = H5P || {};

/**
 * H5P Joubel UI library.
 *
 * This is a utility library, which does not implement attach. I.e, it has to bee actively used by
 * other libraries
 * @module
 */
H5P.JoubelUI = (function ($) {

  /**
   * The internal object to return
   * @class H5P.JoubelUI
   * @static
   */
  function JoubelUI() {}

  /* Public static functions */

  /**
   * Create a tip icon
   * @method H5P.JoubelUI.createTip
   * @param  {string}  text   The textual tip
   * @param  {Object}  params Parameters
   * @return {H5P.JoubelTip}
   */
  JoubelUI.createTip = function (text, params) {
    return new H5P.JoubelTip(text, params);
  };

  /**
   * Create message dialog
   * @method H5P.JoubelUI.createMessageDialog
   * @param  {H5P.jQuery}               $container The dom container
   * @param  {string}                   message    The message
   * @return {H5P.JoubelMessageDialog}
   */
  JoubelUI.createMessageDialog = function ($container, message) {
    return new H5P.JoubelMessageDialog($container, message);
  };

  /**
   * Create help text dialog
   * @method H5P.JoubelUI.createHelpTextDialog
   * @param  {string}             header  The textual header
   * @param  {string}             message The textual message
   * @param  {string}             closeButtonTitle The title for the close button
   * @return {H5P.JoubelHelpTextDialog}
   */
  JoubelUI.createHelpTextDialog = function (header, message, closeButtonTitle) {
    return new H5P.JoubelHelpTextDialog(header, message, closeButtonTitle);
  };

  /**
   * Create progress circle
   * @method H5P.JoubelUI.createProgressCircle
   * @param  {number}             number          The progress (0 to 100)
   * @param  {string}             progressColor   The progress color in hex value
   * @param  {string}             fillColor       The fill color in hex value
   * @param  {string}             backgroundColor The background color in hex value
   * @return {H5P.JoubelProgressCircle}
   */
  JoubelUI.createProgressCircle = function (number, progressColor, fillColor, backgroundColor) {
    return new H5P.JoubelProgressCircle(number, progressColor, fillColor, backgroundColor);
  };

  /**
   * Create throbber for loading
   * @method H5P.JoubelUI.createThrobber
   * @return {H5P.JoubelThrobber}
   */
  JoubelUI.createThrobber = function () {
    return new H5P.JoubelThrobber();
  };

  /**
   * Create simple rounded button
   * @method H5P.JoubelUI.createSimpleRoundedButton
   * @param  {string}                  text The button label
   * @return {H5P.SimpleRoundedButton}
   */
  JoubelUI.createSimpleRoundedButton = function (text) {
    return new H5P.SimpleRoundedButton(text);
  };

  /**
   * Create Slider
   * @method H5P.JoubelUI.createSlider
   * @param  {Object} [params] Parameters
   * @return {H5P.JoubelSlider}
   */
  JoubelUI.createSlider = function (params) {
    return new H5P.JoubelSlider(params);
  };

  /**
   * Create Score Bar
   * @method H5P.JoubelUI.createScoreBar
   * @param  {number=}       maxScore The maximum score
   * @param {string} [label] Makes it easier for readspeakers to identify the scorebar
   * @return {H5P.JoubelScoreBar}
   */
  JoubelUI.createScoreBar = function (maxScore, label, helpText, scoreExplanationButtonLabel) {
    return new H5P.JoubelScoreBar(maxScore, label, helpText, scoreExplanationButtonLabel);
  };

  /**
   * Create Progressbar
   * @method H5P.JoubelUI.createProgressbar
   * @param  {number=}       numSteps The total numer of steps
   * @param {Object} [options] Additional options
   * @param {boolean} [options.disableAria] Disable readspeaker assistance
   * @param {string} [options.progressText] A progress text for describing
   *  current progress out of total progress for readspeakers.
   *  e.g. "Slide :num of :total"
   * @return {H5P.JoubelProgressbar}
   */
  JoubelUI.createProgressbar = function (numSteps, options) {
    return new H5P.JoubelProgressbar(numSteps, options);
  };

  /**
   * Create standard Joubel button
   *
   * @method H5P.JoubelUI.createButton
   * @param {object} params
   *  May hold any properties allowed by jQuery. If href is set, an A tag
   *  is used, if not a button tag is used.
   * @return {H5P.jQuery} The jquery element created
   */
  JoubelUI.createButton = function(params) {
    var type = 'button';
    if (params.href) {
      type = 'a';
    }
    else {
      params.type = 'button';
    }
    if (params.class) {
      params.class += ' h5p-joubelui-button';
    }
    else {
      params.class = 'h5p-joubelui-button';
    }
    return $('<' + type + '/>', params);
  };

  /**
   * Fix for iframe scoll bug in IOS. When focusing an element that doesn't have
   * focus support by default the iframe will scroll the parent frame so that
   * the focused element is out of view. This varies dependening on the elements
   * of the parent frame.
   */
  if (H5P.isFramed && !H5P.hasiOSiframeScrollFix &&
      /iPad|iPhone|iPod/.test(navigator.userAgent)) {
    H5P.hasiOSiframeScrollFix = true;

    // Keep track of original focus function
    var focus = HTMLElement.prototype.focus;

    // Override the original focus
    HTMLElement.prototype.focus = function () {
      // Only focus the element if it supports it natively
      if ( (this instanceof HTMLAnchorElement ||
            this instanceof HTMLInputElement ||
            this instanceof HTMLSelectElement ||
            this instanceof HTMLTextAreaElement ||
            this instanceof HTMLButtonElement ||
            this instanceof HTMLIFrameElement ||
            this instanceof HTMLAreaElement) && // HTMLAreaElement isn't supported by Safari yet.
          !this.getAttribute('role')) { // Focus breaks if a different role has been set
          // In theory this.isContentEditable should be able to recieve focus,
          // but it didn't work when tested.

        // Trigger the original focus with the proper context
        focus.call(this);
      }
    };
  }

  return JoubelUI;
})(H5P.jQuery);
;
H5P.Question = (function ($, EventDispatcher, JoubelUI) {

  /**
   * Extending this class make it alot easier to create tasks for other
   * content types.
   *
   * @class H5P.Question
   * @extends H5P.EventDispatcher
   * @param {string} type
   */
  function Question(type) {
    var self = this;

    // Inheritance
    EventDispatcher.call(self);

    // Register default section order
    self.order = ['video', 'image', 'introduction', 'content', 'explanation', 'feedback', 'scorebar', 'buttons', 'read'];

    // Keep track of registered sections
    var sections = {};

    // Buttons
    var buttons = {};
    var buttonOrder = [];

    // Wrapper when attached
    var $wrapper;

    // Click element
    var clickElement;

    // ScoreBar
    var scoreBar;

    // Keep track of the feedback's visual status.
    var showFeedback;

    // Keep track of which buttons are scheduled for hiding.
    var buttonsToHide = [];

    // Keep track of which buttons are scheduled for showing.
    var buttonsToShow = [];

    // Keep track of the hiding and showing of buttons.
    var toggleButtonsTimer;
    var toggleButtonsTransitionTimer;
    var buttonTruncationTimer;

    // Keeps track of initialization of question
    var initialized = false;

    /**
     * @type {Object} behaviour Behaviour of Question
     * @property {Boolean} behaviour.disableFeedback Set to true to disable feedback section
     */
    var behaviour = {
      disableFeedback: false,
      disableReadSpeaker: false
    };

    // Keeps track of thumb state
    var imageThumb = true;

    // Keeps track of image transitions
    var imageTransitionTimer;

    // Keep track of whether sections is transitioning.
    var sectionsIsTransitioning = false;

    // Keep track of auto play state
    var disableAutoPlay = false;

    // Feedback transition timer
    var feedbackTransitionTimer;

    // Used when reading messages to the user
    var $read, readText;

    /**
     * Register section with given content.
     *
     * @private
     * @param {string} section ID of the section
     * @param {(string|H5P.jQuery)} [content]
     */
    var register = function (section, content) {
      sections[section] = {};
      var $e = sections[section].$element = $('<div/>', {
        'class': 'h5p-question-' + section,
      });
      if (content) {
        $e[content instanceof $ ? 'append' : 'html'](content);
      }
    };

    /**
     * Update registered section with content.
     *
     * @private
     * @param {string} section ID of the section
     * @param {(string|H5P.jQuery)} content
     */
    var update = function (section, content) {
      if (content instanceof $) {
        sections[section].$element.html('').append(content);
      }
      else {
        sections[section].$element.html(content);
      }
    };

    /**
     * Insert element with given ID into the DOM.
     *
     * @private
     * @param {array|Array|string[]} order
     * List with ordered element IDs
     * @param {string} id
     * ID of the element to be inserted
     * @param {Object} elements
     * Maps ID to the elements
     * @param {H5P.jQuery} $container
     * Parent container of the elements
     */
    var insert = function (order, id, elements, $container) {
      // Try to find an element id should be after
      for (var i = 0; i < order.length; i++) {
        if (order[i] === id) {
          // Found our pos
          while (i > 0 &&
          (elements[order[i - 1]] === undefined ||
          !elements[order[i - 1]].isVisible)) {
            i--;
          }
          if (i === 0) {
            // We are on top.
            elements[id].$element.prependTo($container);
          }
          else {
            // Add after element
            elements[id].$element.insertAfter(elements[order[i - 1]].$element);
          }
          elements[id].isVisible = true;
          break;
        }
      }
    };

    /**
     * Make feedback into a popup and position relative to click.
     *
     * @private
     * @param {string} [closeText] Text for the close button
     */
    var makeFeedbackPopup = function (closeText) {
      var $element = sections.feedback.$element;
      var $parent = sections.content.$element;
      var $click = (clickElement != null ? clickElement.$element : null);

      $element.appendTo($parent).addClass('h5p-question-popup');

      if (sections.scorebar) {
        sections.scorebar.$element.appendTo($element);
      }

      $parent.addClass('h5p-has-question-popup');

      // Draw the tail
      var $tail = $('<div/>', {
        'class': 'h5p-question-feedback-tail'
      }).hide()
        .appendTo($parent);

      // Draw the close button
      var $close = $('<div/>', {
        'class': 'h5p-question-feedback-close',
        'tabindex': 0,
        'title': closeText,
        on: {
          click: function (event) {
            $element.remove();
            $tail.remove();
            event.preventDefault();
          },
          keydown: function (event) {
            switch (event.which) {
              case 13: // Enter
              case 32: // Space
                $element.remove();
                $tail.remove();
                event.preventDefault();
            }
          }
        }
      }).hide().appendTo($element);

      if ($click != null) {
        if ($click.hasClass('correct')) {
          $element.addClass('h5p-question-feedback-correct');
          $close.show();
          sections.buttons.$element.hide();
        }
        else {
          sections.buttons.$element.appendTo(sections.feedback.$element);
        }
      }

      positionFeedbackPopup($element, $click);
    };

    /**
     * Position the feedback popup.
     *
     * @private
     * @param {H5P.jQuery} $element Feedback div
     * @param {H5P.jQuery} $click Visual click div
     */
    var positionFeedbackPopup = function ($element, $click) {
      var $container = $element.parent();
      var $tail = $element.siblings('.h5p-question-feedback-tail');
      var popupWidth = $element.outerWidth();
      var popupHeight = setElementHeight($element);
      var space = 15;
      var disableTail = false;
      var positionY = $container.height() / 2 - popupHeight / 2;
      var positionX = $container.width() / 2 - popupWidth / 2;
      var tailX = 0;
      var tailY = 0;
      var tailRotation = 0;

      if ($click != null) {
        // Edge detection for click, takes space into account
        var clickNearTop = ($click[0].offsetTop < space);
        var clickNearBottom = ($click[0].offsetTop + $click.height() > $container.height() - space);
        var clickNearLeft = ($click[0].offsetLeft < space);
        var clickNearRight = ($click[0].offsetLeft + $click.width() > $container.width() - space);

        // Click is not in a corner or close to edge, calculate position normally
        positionX = $click[0].offsetLeft - popupWidth / 2  + $click.width() / 2;
        positionY = $click[0].offsetTop - popupHeight - space;
        tailX = positionX + popupWidth / 2 - $tail.width() / 2;
        tailY = positionY + popupHeight - ($tail.height() / 2);
        tailRotation = 225;

        // If popup is outside top edge, position under click instead
        if (popupHeight + space > $click[0].offsetTop) {
          positionY = $click[0].offsetTop + $click.height() + space;
          tailY = positionY - $tail.height() / 2 ;
          tailRotation = 45;
        }

        // If popup is outside left edge, position left
        if (positionX < 0) {
          positionX = 0;
        }

        // If popup is outside right edge, position right
        if (positionX + popupWidth > $container.width()) {
          positionX = $container.width() - popupWidth;
        }

        // Special cases such as corner clicks, or close to an edge, they override X and Y positions if met
        if (clickNearTop && (clickNearLeft || clickNearRight)) {
          positionX = $click[0].offsetLeft + (clickNearLeft ? $click.width() : -popupWidth);
          positionY = $click[0].offsetTop + $click.height();
          disableTail = true;
        }
        else if (clickNearBottom && (clickNearLeft || clickNearRight)) {
          positionX = $click[0].offsetLeft + (clickNearLeft ? $click.width() : -popupWidth);
          positionY = $click[0].offsetTop - popupHeight;
          disableTail = true;
        }
        else if (!clickNearTop && !clickNearBottom) {
          if (clickNearLeft || clickNearRight) {
            positionY = $click[0].offsetTop - popupHeight / 2 + $click.width() / 2;
            positionX = $click[0].offsetLeft + (clickNearLeft ? $click.width() + space : -popupWidth + -space);
            // Make sure this does not position the popup off screen
            if (positionX < 0) {
              positionX = 0;
              disableTail = true;
            }
            else {
              tailX = positionX + (clickNearLeft ? - $tail.width() / 2 : popupWidth - $tail.width() / 2);
              tailY = positionY + popupHeight / 2 - $tail.height() / 2;
              tailRotation = (clickNearLeft ? 315 : 135);
            }
          }
        }

        // Contain popup from overflowing bottom edge
        if (positionY + popupHeight > $container.height()) {
          positionY = $container.height() - popupHeight;

          if (popupHeight > $container.height() - ($click[0].offsetTop + $click.height() + space)) {
            disableTail = true;
          }
        }
      }
      else {
        disableTail = true;
      }

      // Contain popup from ovreflowing top edge
      if (positionY < 0) {
        positionY = 0;
      }

      $element.css({top: positionY, left: positionX});
      $tail.css({top: tailY, left: tailX});

      if (!disableTail) {
        $tail.css({
          'left': tailX,
          'top': tailY,
          'transform': 'rotate(' + tailRotation + 'deg)'
        }).show();
      }
      else {
        $tail.hide();
      }
    };

    /**
     * Set element max height, used for animations.
     *
     * @param {H5P.jQuery} $element
     */
    var setElementHeight = function ($element) {
      if (!$element.is(':visible')) {
        // No animation
        $element.css('max-height', 'none');
        return;
      }

      // If this element is shown in the popup, we can't set width to 100%,
      // since it already has a width set in CSS
      var isFeedbackPopup = $element.hasClass('h5p-question-popup');

      // Get natural element height
      var $tmp = $element.clone()
        .css({
          'position': 'absolute',
          'max-height': 'none',
          'width': isFeedbackPopup ? '' : '100%'
        })
        .appendTo($element.parent());

      // Need to take margins into account when calculating available space
      var sideMargins = parseFloat($element.css('margin-left'))
        + parseFloat($element.css('margin-right'));
      var tmpElWidth = $tmp.css('width') ? $tmp.css('width') : '100%';
      $tmp.css('width', 'calc(' + tmpElWidth + ' - ' + sideMargins + 'px)');

      // Apply height to element
      var h = Math.round($tmp.get(0).getBoundingClientRect().height);
      var fontSize = parseFloat($element.css('fontSize'));
      var relativeH = h / fontSize;
      $element.css('max-height', relativeH + 'em');
      $tmp.remove();

      if (h > 0 && sections.buttons && sections.buttons.$element === $element) {
        // Make sure buttons section is visible
        showSection(sections.buttons);

        // Resize buttons after resizing button section
        setTimeout(resizeButtons, 150);
      }
      return h;
    };

    /**
     * Does the actual job of hiding the buttons scheduled for hiding.
     *
     * @private
     * @param {boolean} [relocateFocus] Find a new button to focus
     */
    var hideButtons = function (relocateFocus) {
      for (var i = 0; i < buttonsToHide.length; i++) {
        hideButton(buttonsToHide[i].id);
      }
      buttonsToHide = [];

      if (relocateFocus) {
        self.focusButton();
      }
    };

    /**
     * Does the actual hiding.
     * @private
     * @param {string} buttonId
     */
    var hideButton = function (buttonId) {
      // Using detach() vs hide() makes it harder to cheat.
      buttons[buttonId].$element.detach();
      buttons[buttonId].isVisible = false;
    };

    /**
     * Shows the buttons on the next tick. This is to avoid buttons flickering
     * If they're both added and removed on the same tick.
     *
     * @private
     */
    var toggleButtons = function () {
      // If no buttons section, return
      if (sections.buttons === undefined) {
        return;
      }

      // Clear transition timer, reevaluate if buttons will be detached
      clearTimeout(toggleButtonsTransitionTimer);

      // Show buttons
      for (var i = 0; i < buttonsToShow.length; i++) {
        insert(buttonOrder, buttonsToShow[i].id, buttons, sections.buttons.$element);
        buttons[buttonsToShow[i].id].isVisible = true;
      }
      buttonsToShow = [];

      // Hide buttons
      var numToHide = 0;
      var relocateFocus = false;
      for (var j = 0; j < buttonsToHide.length; j++) {
        var button = buttons[buttonsToHide[j].id];
        if (button.isVisible) {
          numToHide += 1;
        }
        if (button.$element.is(':focus')) {
          // Move focus to the first visible button.
          relocateFocus = true;
        }
      }

      var animationTimer = 150;
      if (sections.feedback && sections.feedback.$element.hasClass('h5p-question-popup')) {
        animationTimer = 0;
      }

      if (numToHide === sections.buttons.$element.children().length) {
        // All buttons are going to be hidden. Hide container using transition.
        hideSection(sections.buttons);
        // Detach buttons
        hideButtons(relocateFocus);
      }
      else {
        hideButtons(relocateFocus);

        // Show button section
        if (!sections.buttons.$element.is(':empty')) {
          showSection(sections.buttons);
          setElementHeight(sections.buttons.$element);

          // Trigger resize after animation
          toggleButtonsTransitionTimer = setTimeout(function () {
            self.trigger('resize');
          }, animationTimer);
        }

        // Resize buttons to fit container
        resizeButtons();
      }

      toggleButtonsTimer = undefined;
    };

    /**
     * Allows for scaling of the question image.
     */
    var scaleImage = function () {
      var $imgSection = sections.image.$element;
      clearTimeout(imageTransitionTimer);

      // Add this here to avoid initial transition of the image making
      // content overflow. Alternatively we need to trigger a resize.
      $imgSection.addClass('animatable');

      if (imageThumb) {

        // Expand image
        $(this).attr('aria-expanded', true);
        $imgSection.addClass('h5p-question-image-fill-width');
        imageThumb = false;

        imageTransitionTimer = setTimeout(function () {
          self.trigger('resize');
        }, 600);
      }
      else {

        // Scale down image
        $(this).attr('aria-expanded', false);
        $imgSection.removeClass('h5p-question-image-fill-width');
        imageThumb = true;

        imageTransitionTimer = setTimeout(function () {
          self.trigger('resize');
        }, 600);
      }
    };

    /**
     * Get scrollable ancestor of element
     *
     * @private
     * @param {H5P.jQuery} $element
     * @param {Number} [currDepth=0] Current recursive calls to ancestor, stop at maxDepth
     * @param {Number} [maxDepth=5] Maximum depth for finding ancestor.
     * @returns {H5P.jQuery} Parent element that is scrollable
     */
    var findScrollableAncestor = function ($element, currDepth, maxDepth) {
      if (!currDepth) {
        currDepth = 0;
      }
      if (!maxDepth) {
        maxDepth = 5;
      }
      // Check validation of element or if we have reached document root
      if (!$element || !($element instanceof $) || document === $element.get(0) || currDepth >= maxDepth) {
        return;
      }

      if ($element.css('overflow-y') === 'auto') {
        return $element;
      }
      else {
        return findScrollableAncestor($element.parent(), currDepth + 1, maxDepth);
      }
    };

    /**
     * Scroll to bottom of Question.
     *
     * @private
     */
    var scrollToBottom = function () {
      if (!$wrapper || ($wrapper.hasClass('h5p-standalone') && !H5P.isFullscreen)) {
        return; // No scroll
      }

      var scrollableAncestor = findScrollableAncestor($wrapper);

      // Scroll to bottom of scrollable ancestor
      if (scrollableAncestor) {
        scrollableAncestor.animate({
          scrollTop: $wrapper.css('height')
        }, "slow");
      }
    };

    /**
     * Resize buttons to fit container width
     *
     * @private
     */
    var resizeButtons = function () {
      if (!buttons || !sections.buttons) {
        return;
      }

      var go = function () {
        // Don't do anything if button elements are not visible yet
        if (!sections.buttons.$element.is(':visible')) {
          return;
        }

        // Width of all buttons
        var buttonsWidth = {
          max: 0,
          min: 0,
          current: 0
        };

        for (var i in buttons) {
          var button = buttons[i];
          if (button.isVisible) {
            setButtonWidth(buttons[i]);
            buttonsWidth.max += button.width.max;
            buttonsWidth.min += button.width.min;
            buttonsWidth.current += button.isTruncated ? button.width.min : button.width.max;
          }
        }

        var makeButtonsFit = function (availableWidth) {
          if (buttonsWidth.max < availableWidth) {
            // It is room for everyone on the right side of the score bar (without truncating)
            if (buttonsWidth.max !== buttonsWidth.current) {
              // Need to make everyone big
              restoreButtonLabels(buttonsWidth.current, availableWidth);
            }
            return true;
          }
          else if (buttonsWidth.min < availableWidth) {
            // Is it room for everyone on the right side of the score bar with truncating?
            if (buttonsWidth.current > availableWidth) {
              removeButtonLabels(buttonsWidth.current, availableWidth);
            }
            else {
              restoreButtonLabels(buttonsWidth.current, availableWidth);
            }
            return true;
          }
          return false;
        };

        toggleFullWidthScorebar(false);

        var buttonSectionWidth = Math.floor(sections.buttons.$element.width()) - 1;

        if (!makeButtonsFit(buttonSectionWidth)) {
          // If we get here we need to wrap:
          toggleFullWidthScorebar(true);
          buttonSectionWidth = Math.floor(sections.buttons.$element.width()) - 1;
          makeButtonsFit(buttonSectionWidth);
        }
      };

      // If visible, resize right away
      if (sections.buttons.$element.is(':visible')) {
        go();
      }
      else { // If not visible, try on the next tick
        // Clear button truncation timer if within a button truncation function
        if (buttonTruncationTimer) {
          clearTimeout(buttonTruncationTimer);
        }
        buttonTruncationTimer = setTimeout(function () {
          buttonTruncationTimer = undefined;
          go();
        }, 0);
      }
    };

    var toggleFullWidthScorebar = function (enabled) {
      if (sections.scorebar &&
          sections.scorebar.$element &&
          sections.scorebar.$element.hasClass('h5p-question-visible')) {
        sections.buttons.$element.addClass('has-scorebar');
        sections.buttons.$element.toggleClass('wrap', enabled);
        sections.scorebar.$element.toggleClass('full-width', enabled);
      }
      else {
        sections.buttons.$element.removeClass('has-scorebar');
      }
    };

    /**
     * Remove button labels until they use less than max width.
     *
     * @private
     * @param {Number} buttonsWidth Total width of all buttons
     * @param {Number} maxButtonsWidth Max width allowed for buttons
     */
    var removeButtonLabels = function (buttonsWidth, maxButtonsWidth) {
      // Reverse traversal
      for (var i = buttonOrder.length - 1; i >= 0; i--) {
        var buttonId = buttonOrder[i];
        var button = buttons[buttonId];
        if (!button.isTruncated && button.isVisible) {
          var $button = button.$element;
          buttonsWidth -= button.width.max - button.width.min;

          // Remove label
          button.$element.attr('aria-label', $button.text()).html('').addClass('truncated');
          button.isTruncated = true;
          if (buttonsWidth <= maxButtonsWidth) {
            // Buttons are small enough.
            return;
          }
        }
      }
    };

    /**
     * Restore button labels until it fills maximum possible width without exceeding the max width.
     *
     * @private
     * @param {Number} buttonsWidth Total width of all buttons
     * @param {Number} maxButtonsWidth Max width allowed for buttons
     */
    var restoreButtonLabels = function (buttonsWidth, maxButtonsWidth) {
      for (var i = 0; i < buttonOrder.length; i++) {
        var buttonId = buttonOrder[i];
        var button = buttons[buttonId];
        if (button.isTruncated && button.isVisible) {
          // Calculate new total width of buttons with a static pixel for consistency cross-browser
          buttonsWidth += button.width.max - button.width.min + 1;

          if (buttonsWidth > maxButtonsWidth) {
            return;
          }
          // Restore label
          button.$element.html(button.text);
          button.$element.removeClass('truncated');
          button.isTruncated = false;
        }
      }
    };

    /**
     * Helper function for finding index of keyValue in array
     *
     * @param {String} keyValue Value to be found
     * @param {String} key In key
     * @param {Array} array In array
     * @returns {number}
     */
    var existsInArray = function (keyValue, key, array) {
      var i;
      for (i = 0; i < array.length; i++) {
        if (array[i][key] === keyValue) {
          return i;
        }
      }
      return -1;
    };

    /**
     * Show a section
     * @param {Object} section
     */
    var showSection = function (section) {
      section.$element.addClass('h5p-question-visible');
      section.isVisible = true;
    };

    /**
     * Hide a section
     * @param {Object} section
     */
    var hideSection = function (section) {
      section.$element.css('max-height', '');
      section.isVisible = false;

      setTimeout(function () {
        // Only hide if section hasn't been set to visible in the meantime
        if (!section.isVisible) {
          section.$element.removeClass('h5p-question-visible');
        }
      }, 150);
    };

    /**
     * Set behaviour for question.
     *
     * @param {Object} options An object containing behaviour that will be extended by Question
     */
    self.setBehaviour = function (options) {
      $.extend(behaviour, options);
    };

    /**
     * A video to display above the task.
     *
     * @param {object} params
     */
    self.setVideo = function (params) {
      sections.video = {
        $element: $('<div/>', {
          'class': 'h5p-question-video'
        })
      };

      if (disableAutoPlay && params.params.playback) {
        params.params.playback.autoplay = false;
      }

      // Never fit to wrapper
      if (!params.params.visuals) {
        params.params.visuals = {};
      }
      params.params.visuals.fit = false;
      sections.video.instance = H5P.newRunnable(params, self.contentId, sections.video.$element, true);
      var fromVideo = false; // Hack to avoid never ending loop
      sections.video.instance.on('resize', function () {
        fromVideo = true;
        self.trigger('resize');
        fromVideo = false;
      });
      self.on('resize', function () {
        if (!fromVideo) {
          sections.video.instance.trigger('resize');
        }
      });

      return self;
    };

    /**
     * Will stop any playback going on in the task.
     */
    self.pause = function () {
      if (sections.video && sections.video.isVisible) {
        sections.video.instance.pause();
      }
    };

    /**
     * Start playback of video
     */
    self.play = function () {
      if (sections.video && sections.video.isVisible) {
        sections.video.instance.play();
      }
    };

    /**
     * Disable auto play, useful in editors.
     */
    self.disableAutoPlay = function () {
      disableAutoPlay = true;
    };

    /**
     * Add task image.
     *
     * @param {string} path Relative
     * @param {Object} [options] Options object
     * @param {string} [options.alt] Text representation
     * @param {string} [options.title] Hover text
     * @param {Boolean} [options.disableImageZooming] Set as true to disable image zooming
     */
    self.setImage = function (path, options) {
      options = options ? options : {};
      sections.image = {};
      // Image container
      sections.image.$element = $('<div/>', {
        'class': 'h5p-question-image h5p-question-image-fill-width'
      });

      // Inner wrap
      var $imgWrap = $('<div/>', {
        'class': 'h5p-question-image-wrap',
        appendTo: sections.image.$element
      });

      // Image element
      var $img = $('<img/>', {
        src: H5P.getPath(path, self.contentId),
        alt: (options.alt === undefined ? '' : options.alt),
        title: (options.title === undefined ? '' : options.title),
        on: {
          load: function () {
            self.trigger('imageLoaded', this);
            self.trigger('resize');
          }
        },
        appendTo: $imgWrap
      });

      // Disable image zooming
      if (options.disableImageZooming) {
        $img.css('maxHeight', 'none');

        // Make sure we are using the correct amount of width at all times
        var determineImgWidth = function () {

          // Remove margins if natural image width is bigger than section width
          var imageSectionWidth = sections.image.$element.get(0).getBoundingClientRect().width;

          // Do not transition, for instant measurements
          $imgWrap.css({
            '-webkit-transition': 'none',
            'transition': 'none'
          });

          // Margin as translateX on both sides of image.
          var diffX = 2 * ($imgWrap.get(0).getBoundingClientRect().left -
            sections.image.$element.get(0).getBoundingClientRect().left);

          if ($img.get(0).naturalWidth >= imageSectionWidth - diffX) {
            sections.image.$element.addClass('h5p-question-image-fill-width');
          }
          else { // Use margin for small res images
            sections.image.$element.removeClass('h5p-question-image-fill-width');
          }

          // Reset transition rules
          $imgWrap.css({
            '-webkit-transition': '',
            'transition': ''
          });
        };

        // Determine image width
        if ($img.is(':visible')) {
          determineImgWidth();
        }
        else {
          $img.on('load', determineImgWidth);
        }

        // Skip adding zoom functionality
        return;
      }

      var sizeDetermined = false;
      var determineSize = function () {
        if (sizeDetermined || !$img.is(':visible')) {
          return; // Try again next time.
        }

        $imgWrap.addClass('h5p-question-image-scalable')
          .attr('aria-expanded', false)
          .attr('role', 'button')
          .attr('tabIndex', '0')
          .on('click', function (event) {
            if (event.which === 1) {
              scaleImage.apply(this); // Left mouse button click
            }
          }).on('keypress', function (event) {
            if (event.which === 32) {
              event.preventDefault(); // Prevent default behaviour; page scroll down
              scaleImage.apply(this); // Space bar pressed
            }
          });
        sections.image.$element.removeClass('h5p-question-image-fill-width');

        sizeDetermined  = true; // Prevent any futher events
      };

      self.on('resize', determineSize);

      return self;
    };

    /**
     * Add the introduction section.
     *
     * @param {(string|H5P.jQuery)} content
     */
    self.setIntroduction = function (content) {
      register('introduction', content);

      return self;
    };

    /**
     * Add the content section.
     *
     * @param {(string|H5P.jQuery)} content
     * @param {Object} [options]
     * @param {string} [options.class]
     */
    self.setContent = function (content, options) {
      register('content', content);

      if (options && options.class) {
        sections.content.$element.addClass(options.class);
      }

      return self;
    };

    /**
     * Force readspeaker to read text. Useful when you have to use
     * setTimeout for animations.
     */
    self.read = function (content) {
      if (!$read) {
        return; // Not ready yet
      }

      if (readText) {
        // Combine texts if called multiple times
        readText += (readText.substr(-1, 1) === '.' ? ' ' : '. ') + content;
      }
      else {
        readText = content;
      }

      // Set text
      $read.html(readText);

      setTimeout(function () {
        // Stop combining when done reading
        readText = null;
        $read.html('');
      }, 100);
    };

    /**
     * Read feedback
     */
    self.readFeedback = function () {
      var invalidFeedback =
        behaviour.disableReadSpeaker ||
        !showFeedback ||
        !sections.feedback ||
        !sections.feedback.$element;

      if (invalidFeedback) {
        return;
      }

      var $feedbackText = $('.h5p-question-feedback-content-text', sections.feedback.$element);
      if ($feedbackText && $feedbackText.html() && $feedbackText.html().length) {
        self.read($feedbackText.html());
      }
    };

    /**
     * Remove feedback
     *
     * @return {H5P.Question}
     */
    self.removeFeedback = function () {

      clearTimeout(feedbackTransitionTimer);

      if (sections.feedback && showFeedback) {

        showFeedback = false;

        // Hide feedback & scorebar
        hideSection(sections.scorebar);
        hideSection(sections.feedback);

        sectionsIsTransitioning = true;

        // Detach after transition
        feedbackTransitionTimer = setTimeout(function () {
          // Avoiding Transition.onTransitionEnd since it will register multiple events, and there's no way to cancel it if the transition changes back to "show" while the animation is happening.
          if (!showFeedback) {
            sections.feedback.$element.children().detach();
            sections.scorebar.$element.children().detach();

            // Trigger resize after animation
            self.trigger('resize');
          }
          sectionsIsTransitioning = false;
          scoreBar.setScore(0);
        }, 150);

        if ($wrapper) {
          $wrapper.find('.h5p-question-feedback-tail').remove();
        }
      }

      return self;
    };

    /**
     * Set feedback message.
     *
     * @param {string} [content]
     * @param {number} score The score
     * @param {number} maxScore The maximum score for this question
     * @param {string} [scoreBarLabel] Makes it easier for readspeakers to identify the scorebar
     * @param {string} [helpText] Help text that describes the score inside a tip icon
     * @param {object} [popupSettings] Extra settings for popup feedback
     * @param {boolean} [popupSettings.showAsPopup] Should the feedback display as popup?
     * @param {string} [popupSettings.closeText] Translation for close button text
     * @param {object} [popupSettings.click] Element representing where user clicked on screen
     */
    self.setFeedback = function (content, score, maxScore, scoreBarLabel, helpText, popupSettings, scoreExplanationButtonLabel) {
      // Feedback is disabled
      if (behaviour.disableFeedback) {
        return self;
      }

      // Need to toggle buttons right away to avoid flickering/blinking
      // Note: This means content types should invoke hide/showButton before setFeedback
      toggleButtons();

      clickElement = (popupSettings != null && popupSettings.click != null ? popupSettings.click : null);
      clearTimeout(feedbackTransitionTimer);

      var $feedback = $('<div>', {
        'class': 'h5p-question-feedback-container'
      });

      var $feedbackContent = $('<div>', {
        'class': 'h5p-question-feedback-content'
      }).appendTo($feedback);

      // Feedback text
      $('<div>', {
        'class': 'h5p-question-feedback-content-text',
        'html': content
      }).appendTo($feedbackContent);

      var $scorebar = $('<div>', {
        'class': 'h5p-question-scorebar-container'
      });
      if (scoreBar === undefined) {
        scoreBar = JoubelUI.createScoreBar(maxScore, scoreBarLabel, helpText, scoreExplanationButtonLabel);
      }
      scoreBar.appendTo($scorebar);

      $feedbackContent.toggleClass('has-content', content !== undefined && content.length > 0);

      // Feedback for readspeakers
      if (!behaviour.disableReadSpeaker && scoreBarLabel) {
        self.read(scoreBarLabel.replace(':num', score).replace(':total', maxScore) + '. ' + (content ? content : ''));
      }

      showFeedback = true;
      if (sections.feedback) {
        // Update section
        update('feedback', $feedback);
        update('scorebar', $scorebar);
      }
      else {
        // Create section
        register('feedback', $feedback);
        register('scorebar', $scorebar);
        if (initialized && $wrapper) {
          insert(self.order, 'feedback', sections, $wrapper);
          insert(self.order, 'scorebar', sections, $wrapper);
        }
      }

      showSection(sections.feedback);
      showSection(sections.scorebar);

      resizeButtons();

      if (popupSettings != null && popupSettings.showAsPopup == true) {
        makeFeedbackPopup(popupSettings.closeText);
        scoreBar.setScore(score);
      }
      else {
        // Show feedback section
        feedbackTransitionTimer = setTimeout(function () {
          setElementHeight(sections.feedback.$element);
          setElementHeight(sections.scorebar.$element);
          sectionsIsTransitioning = true;

          // Scroll to bottom after showing feedback
          scrollToBottom();

          // Trigger resize after animation
          feedbackTransitionTimer = setTimeout(function () {
            sectionsIsTransitioning = false;
            self.trigger('resize');
            scoreBar.setScore(score);
          }, 150);
        }, 0);
      }

      return self;
    };

    /**
     * Set feedback content (no animation).
     *
     * @param {string} content
     * @param {boolean} [extendContent] True will extend content, instead of replacing it
     */
    self.updateFeedbackContent = function (content, extendContent) {
      if (sections.feedback && sections.feedback.$element) {

        if (extendContent) {
          content = $('.h5p-question-feedback-content', sections.feedback.$element).html() + ' ' + content;
        }

        // Update feedback content html
        $('.h5p-question-feedback-content', sections.feedback.$element).html(content).addClass('has-content');

        // Make sure the height is correct
        setElementHeight(sections.feedback.$element);

        // Need to trigger resize when feedback has finished transitioning
        setTimeout(self.trigger.bind(self, 'resize'), 150);
      }

      return self;
    };

    /**
     * Set the content of the explanation / feedback panel
     *
     * @param {Object} data
     * @param {string} data.correct
     * @param {string} data.wrong
     * @param {string} data.text
     * @param {string} title Title for explanation panel
     *
     * @return {H5P.Question}
     */
    self.setExplanation = function (data, title) {
      if (data) {
        var explainer = new H5P.Question.Explainer(title, data);

        if (sections.explanation) {
          // Update section
          update('explanation', explainer.getElement());
        }
        else {
          register('explanation', explainer.getElement());

          if (initialized && $wrapper) {
            insert(self.order, 'explanation', sections, $wrapper);
          }
        }
      }
      else if (sections.explanation) {
        // Hide explanation section
        sections.explanation.$element.children().detach();
      }

      return self;
    };

    /**
     * Checks to see if button is registered.
     *
     * @param {string} id
     * @returns {boolean}
     */
    self.hasButton = function (id) {
      return (buttons[id] !== undefined);
    };

    /**
     * @typedef {Object} ConfirmationDialog
     * @property {boolean} [enable] Must be true to show confirmation dialog
     * @property {Object} [instance] Instance that uses confirmation dialog
     * @property {jQuery} [$parentElement] Append to this element.
     * @property {Object} [l10n] Translatable fields
     * @property {string} [l10n.header] Header text
     * @property {string} [l10n.body] Body text
     * @property {string} [l10n.cancelLabel]
     * @property {string} [l10n.confirmLabel]
     */

    /**
     * Register buttons for the task.
     *
     * @param {string} id
     * @param {string} text label
     * @param {function} clicked
     * @param {boolean} [visible=true]
     * @param {Object} [options] Options for button
     * @param {Object} [extras] Extra options
     * @param {ConfirmationDialog} [extras.confirmationDialog] Confirmation dialog
     * @param {Object} [extras.contentData] Content data
     * @params {string} [extras.textIfSubmitting] Text to display if submitting
     */
    self.addButton = function (id, text, clicked, visible, options, extras) {
      if (buttons[id]) {
        return self; // Already registered
      }

      if (sections.buttons === undefined)  {
        // We have buttons, register wrapper
        register('buttons');
        if (initialized) {
          insert(self.order, 'buttons', sections, $wrapper);
        }
      }

      extras = extras || {};
      extras.confirmationDialog = extras.confirmationDialog || {};
      options = options || {};

      var confirmationDialog =
        self.addConfirmationDialogToButton(extras.confirmationDialog, clicked);

      /**
       * Handle button clicks through both mouse and keyboard
       * @private
       */
      var handleButtonClick = function () {
        if (extras.confirmationDialog.enable && confirmationDialog) {
          // Show popups section if used
          if (!extras.confirmationDialog.$parentElement) {
            sections.popups.$element.removeClass('hidden');
          }
          confirmationDialog.show($e.position().top);
        }
        else {
          clicked();
        }
      };

      const isSubmitting = extras.contentData && extras.contentData.standalone
        && (extras.contentData.isScoringEnabled || extras.contentData.isReportingEnabled);

      if (isSubmitting && extras.textIfSubmitting) {
        text = extras.textIfSubmitting;
      }

      buttons[id] = {
        isTruncated: false,
        text: text,
        isVisible: false
      };
      // The button might be <button> or <a>
      // (dependent on options.href set or not)
      var isAnchorTag = (options.href !== undefined);
      var $e = buttons[id].$element = JoubelUI.createButton($.extend({
        'class': 'h5p-question-' + id,
        html: text,
        title: text,
        on: {
          click: function (event) {
            handleButtonClick();
            if (isAnchorTag) {
              event.preventDefault();
            }
          }
        }
      }, options));
      buttonOrder.push(id);

      // The button might be <button> or <a>. If <a>, the space key is not
      // triggering the click event, must therefore handle this here:
      if (isAnchorTag) {
        $e.on('keypress', function (event) {
          if (event.which === 32) { // Space
            handleButtonClick();
            event.preventDefault();
          }
        });
      }

      if (visible === undefined || visible) {
        // Button should be visible
        $e.appendTo(sections.buttons.$element);
        buttons[id].isVisible = true;
        showSection(sections.buttons);
      }

      return self;
    };

    var setButtonWidth = function (button) {
      var $button = button.$element;
      var $tmp = $button.clone()
        .css({
          'position': 'absolute',
          'white-space': 'nowrap',
          'max-width': 'none'
        }).removeClass('truncated')
        .html(button.text)
        .appendTo($button.parent());

      // Calculate max width (button including text)
      button.width = {
        max: Math.ceil($tmp.outerWidth() + parseFloat($tmp.css('margin-left')) + parseFloat($tmp.css('margin-right')))
      };

      // Calculate min width (truncated, icon only)
      $tmp.html('').addClass('truncated');
      button.width.min = Math.ceil($tmp.outerWidth() + parseFloat($tmp.css('margin-left')) + parseFloat($tmp.css('margin-right')));
      $tmp.remove();
    };

    /**
     * Add confirmation dialog to button
     * @param {ConfirmationDialog} options
     *  A confirmation dialog that will be shown before click handler of button
     *  is triggered
     * @param {function} clicked
     *  Click handler of button
     * @return {H5P.ConfirmationDialog|undefined}
     *  Confirmation dialog if enabled
     */
    self.addConfirmationDialogToButton = function (options, clicked) {
      options = options || {};

      if (!options.enable) {
        return;
      }

      // Confirmation dialog
      var confirmationDialog = new H5P.ConfirmationDialog({
        instance: options.instance,
        headerText: options.l10n.header,
        dialogText: options.l10n.body,
        cancelText: options.l10n.cancelLabel,
        confirmText: options.l10n.confirmLabel
      });

      // Determine parent element
      if (options.$parentElement) {
        confirmationDialog.appendTo(options.$parentElement.get(0));
      }
      else {

        // Create popup section and append to that
        if (sections.popups === undefined) {
          register('popups');
          if (initialized) {
            insert(self.order, 'popups', sections, $wrapper);
          }
          sections.popups.$element.addClass('hidden');
          self.order.push('popups');
        }
        confirmationDialog.appendTo(sections.popups.$element.get(0));
      }

      // Add event listeners
      confirmationDialog.on('confirmed', function () {
        if (!options.$parentElement) {
          sections.popups.$element.addClass('hidden');
        }
        clicked();

        // Trigger to content type
        self.trigger('confirmed');
      });

      confirmationDialog.on('canceled', function () {
        if (!options.$parentElement) {
          sections.popups.$element.addClass('hidden');
        }
        // Trigger to content type
        self.trigger('canceled');
      });

      return confirmationDialog;
    };

    /**
     * Show registered button with given identifier.
     *
     * @param {string} id
     * @param {Number} [priority]
     */
    self.showButton = function (id, priority) {
      var aboutToBeHidden = existsInArray(id, 'id', buttonsToHide) !== -1;
      if (buttons[id] === undefined || (buttons[id].isVisible === true && !aboutToBeHidden)) {
        return self;
      }

      priority = priority || 0;

      // Skip if already being shown
      var indexToShow = existsInArray(id, 'id', buttonsToShow);
      if (indexToShow !== -1) {

        // Update priority
        if (buttonsToShow[indexToShow].priority < priority) {
          buttonsToShow[indexToShow].priority = priority;
        }

        return self;
      }

      // Check if button is going to be hidden on next tick
      var exists = existsInArray(id, 'id', buttonsToHide);
      if (exists !== -1) {

        // Skip hiding if higher priority
        if (buttonsToHide[exists].priority <= priority) {
          buttonsToHide.splice(exists, 1);
          buttonsToShow.push({id: id, priority: priority});
        }

      } // If button is not shown
      else if (!buttons[id].$element.is(':visible')) {

        // Show button on next tick
        buttonsToShow.push({id: id, priority: priority});
      }

      if (!toggleButtonsTimer) {
        toggleButtonsTimer = setTimeout(toggleButtons, 0);
      }

      return self;
    };

    /**
     * Hide registered button with given identifier.
     *
     * @param {string} id
     * @param {number} [priority]
     */
    self.hideButton = function (id, priority) {
      var aboutToBeShown = existsInArray(id, 'id', buttonsToShow) !== -1;
      if (buttons[id] === undefined || (buttons[id].isVisible === false && !aboutToBeShown)) {
        return self;
      }

      priority = priority || 0;

      // Skip if already being hidden
      var indexToHide = existsInArray(id, 'id', buttonsToHide);
      if (indexToHide !== -1) {

        // Update priority
        if (buttonsToHide[indexToHide].priority < priority) {
          buttonsToHide[indexToHide].priority = priority;
        }

        return self;
      }

      // Check if buttons is going to be shown on next tick
      var exists = existsInArray(id, 'id', buttonsToShow);
      if (exists !== -1) {

        // Skip showing if higher priority
        if (buttonsToShow[exists].priority <= priority) {
          buttonsToShow.splice(exists, 1);
          buttonsToHide.push({id: id, priority: priority});
        }
      }
      else if (!buttons[id].$element.is(':visible')) {

        // Make sure it is detached in case the container is hidden.
        hideButton(id);
      }
      else {

        // Hide button on next tick.
        buttonsToHide.push({id: id, priority: priority});
      }

      if (!toggleButtonsTimer) {
        toggleButtonsTimer = setTimeout(toggleButtons, 0);
      }

      return self;
    };

    /**
     * Set focus to the given button. If no button is given the first visible
     * button gets focused. This is useful if you lose focus.
     *
     * @param {string} [id]
     */
    self.focusButton = function (id) {
      if (id === undefined) {
        // Find first button that is visible.
        for (var i = 0; i < buttonOrder.length; i++) {
          var button = buttons[buttonOrder[i]];
          if (button && button.isVisible) {
            // Give that button focus
            button.$element.focus();
            break;
          }
        }
      }
      else if (buttons[id] && buttons[id].$element.is(':visible')) {
        // Set focus to requested button
        buttons[id].$element.focus();
      }

      return self;
    };

    /**
     * Toggle readspeaker functionality
     * @param {boolean} [disable] True to disable, false to enable.
     */
    self.toggleReadSpeaker = function (disable) {
      behaviour.disableReadSpeaker = disable || !behaviour.disableReadSpeaker;
    };

    /**
     * Set new element for section.
     *
     * @param {String} id
     * @param {H5P.jQuery} $element
     */
    self.insertSectionAtElement = function (id, $element) {
      if (sections[id] === undefined) {
        register(id);
      }
      sections[id].parent = $element;

      // Insert section if question is not initialized
      if (!initialized) {
        insert([id], id, sections, $element);
      }

      return self;
    };

    /**
     * Attach content to given container.
     *
     * @param {H5P.jQuery} $container
     */
    self.attach = function ($container) {
      if (self.isRoot()) {
        self.setActivityStarted();
      }

      // The first time we attach we also create our DOM elements.
      if ($wrapper === undefined) {
        if (self.registerDomElements !== undefined &&
           (self.registerDomElements instanceof Function ||
           typeof self.registerDomElements === 'function')) {

          // Give the question type a chance to register before attaching
          self.registerDomElements();
        }

        // Create section for reading messages
        $read = $('<div/>', {
          'aria-live': 'polite',
          'class': 'h5p-hidden-read'
        });
        register('read', $read);
        self.trigger('registerDomElements');
      }

      // Prepare container
      $wrapper = $container;
      $container.html('')
        .addClass('h5p-question h5p-' + type);

      // Add sections in given order
      var $sections = [];
      for (var i = 0; i < self.order.length; i++) {
        var section = self.order[i];
        if (sections[section]) {
          if (sections[section].parent) {
            // Section has a different parent
            sections[section].$element.appendTo(sections[section].parent);
          }
          else {
            $sections.push(sections[section].$element);
          }
          sections[section].isVisible = true;
        }
      }

      // Only append once to DOM for optimal performance
      $container.append($sections);

      // Let others react to dom changes
      self.trigger('domChanged', {
        '$target': $container,
        'library': self.libraryInfo.machineName,
        'contentId': self.contentId,
        'key': 'newLibrary'
      }, {'bubbles': true, 'external': true});

      // ??
      initialized = true;

      return self;
    };

    /**
     * Detach all sections from their parents
     */
    self.detachSections = function () {
      // Deinit Question
      initialized = false;

      // Detach sections
      for (var section in sections) {
        sections[section].$element.detach();
      }

      return self;
    };

    // Listen for resize
    self.on('resize', function () {
      // Allow elements to attach and set their height before resizing
      if (!sectionsIsTransitioning && sections.feedback && showFeedback) {
        // Resize feedback to fit
        setElementHeight(sections.feedback.$element);
      }

      // Re-position feedback popup if in use
      var $element = sections.feedback;
      var $click = clickElement;

      if ($element != null && $element.$element != null && $click != null && $click.$element != null) {
        setTimeout(function () {
          positionFeedbackPopup($element.$element, $click.$element);
        }, 10);
      }

      resizeButtons();
    });
  }

  // Inheritance
  Question.prototype = Object.create(EventDispatcher.prototype);
  Question.prototype.constructor = Question;

  /**
   * Determine the overall feedback to display for the question.
   * Returns empty string if no matching range is found.
   *
   * @param {Object[]} feedbacks
   * @param {number} scoreRatio
   * @return {string}
   */
  Question.determineOverallFeedback = function (feedbacks, scoreRatio) {
    scoreRatio = Math.floor(scoreRatio * 100);

    for (var i = 0; i < feedbacks.length; i++) {
      var feedback = feedbacks[i];
      var hasFeedback = (feedback.feedback !== undefined && feedback.feedback.trim().length !== 0);

      if (feedback.from <= scoreRatio && feedback.to >= scoreRatio && hasFeedback) {
        return feedback.feedback;
      }
    }

    return '';
  };

  return Question;
})(H5P.jQuery, H5P.EventDispatcher, H5P.JoubelUI);
;
H5P.Question.Explainer = (function ($) {
  /**
   * Constructor
   *
   * @class
   * @param {string} title
   * @param {array} explanations
   */
  function Explainer(title, explanations) {
    var self = this;

    /**
     * Create the DOM structure
     */
    var createHTML = function () {
      self.$explanation = $('<div>', {
        'class': 'h5p-question-explanation-container'
      });

      // Add title:
      $('<div>', {
        'class': 'h5p-question-explanation-title',
        role: 'heading',
        html: title,
        appendTo: self.$explanation
      });

      var $explanationList = $('<ul>', {
        'class': 'h5p-question-explanation-list',
        appendTo: self.$explanation
      });

      for (var i = 0; i < explanations.length; i++) {
        var feedback = explanations[i];
        var $explanationItem = $('<li>', {
          'class': 'h5p-question-explanation-item',
          appendTo: $explanationList
        });

        var $content = $('<div>', {
          'class': 'h5p-question-explanation-status'
        });

        if (feedback.correct) {
          $('<span>', {
            'class': 'h5p-question-explanation-correct',
            html: feedback.correct,
            appendTo: $content
          });
        }
        if (feedback.wrong) {
          $('<span>', {
            'class': 'h5p-question-explanation-wrong',
            html: feedback.wrong,
            appendTo: $content
          });
        }
        $content.appendTo($explanationItem);

        if (feedback.text) {
          $('<div>', {
            'class': 'h5p-question-explanation-text',
            html: feedback.text,
            appendTo: $explanationItem
          });
        }
      }
    };

    createHTML();

    /**
     * Return the container HTMLElement
     *
     * @return {HTMLElement}
     */
    self.getElement = function () {
      return self.$explanation;
    };
  }

  return Explainer;

})(H5P.jQuery);
;
(function (Question) {

  /**
   * Makes it easy to add animated score points for your question type.
   *
   * @class H5P.Question.ScorePoints
   */
  Question.ScorePoints = function () {
    var self = this;

    var elements = [];
    var showElementsTimer;

    /**
     * Create the element that displays the score point element for questions.
     *
     * @param {boolean} isCorrect
     * @return {HTMLElement}
     */
    self.getElement = function (isCorrect) {
      var element = document.createElement('div');
      element.classList.add(isCorrect ? 'h5p-question-plus-one' : 'h5p-question-minus-one');
      element.classList.add('h5p-question-hidden-one');
      elements.push(element);

      // Schedule display animation of all added elements
      if (showElementsTimer) {
        clearTimeout(showElementsTimer);
      }
      showElementsTimer = setTimeout(showElements, 0);

      return element;
    };

    /**
     * @private
     */
    var showElements = function () {
      // Determine delay between triggering animations
      var delay = 0;
      var increment = 150;
      var maxTime = 1000;

      if (elements.length && elements.length > Math.ceil(maxTime / increment)) {
        // Animations will run for more than ~1 second, reduce it.
        increment = maxTime / elements.length;
      }

      for (var i = 0; i < elements.length; i++) {
        // Use timer to trigger show
        setTimeout(showElement(elements[i]), delay);

        // Increse delay for next element
        delay += increment;
      }
    };

    /**
     * Trigger transition animation for the given element
     *
     * @private
     * @param {HTMLElement} element
     * @return {function}
     */
    var showElement = function (element) {
      return function () {
        element.classList.remove('h5p-question-hidden-one');
      };
    };
  };

})(H5P.Question);
;
(function(e){function t(r){if(a[r])return a[r].exports;var o=a[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var a={};return t.m=e,t.c=a,t.d=function(e,a,r){t.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:r})},t.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},t.t=function(e,a){if(1&a&&(e=t(e)),8&a)return e;if(4&a&&'object'==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,'default',{enumerable:!0,value:e}),2&a&&'string'!=typeof e)for(var o in e)t.d(r,o,function(t){return e[t]}.bind(null,o));return r},t.n=function(e){var a=e&&e.__esModule?function(){return e['default']}:function(){return e};return t.d(a,'a',a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p='',t(t.s=102)})([function(e,t,a){(function(t){function a(e){'@babel/helpers - typeof';return a='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},a(e)}var r=function(e){return e&&e.Math==Math&&e};e.exports=r('object'==('undefined'==typeof globalThis?'undefined':a(globalThis))&&globalThis)||r('object'==('undefined'==typeof window?'undefined':a(window))&&window)||r('object'==('undefined'==typeof self?'undefined':a(self))&&self)||r('object'==('undefined'==typeof t?'undefined':a(t))&&t)||Function('return this')()}).call(this,a(62))},function(e,t,a){var r=a(0),o=a(36),i=a(3),s=a(40),n=a(41),l=a(63),p=o('wks'),c=r.Symbol,d=l?c:c&&c.withoutSetter||s;e.exports=function(e){return i(p,e)||(n&&i(c,e)?p[e]=c[e]:p[e]=d('Symbol.'+e)),p[e]}},function(e,t,a){var r=a(8);e.exports=function(e){if(!r(e))throw TypeError(e+' is not an object');return e}},function(e){var t={}.hasOwnProperty;e.exports=function(e,a){return t.call(e,a)}},function(e,t,a){var r=a(6),o=a(7),i=a(18);e.exports=r?function(e,t,a){return o.f(e,t,i(1,a))}:function(e,t,a){return e[t]=a,e}},function(e){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,a){var r=a(5);e.exports=!r(function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})},function(e,t,a){var r=a(6),o=a(38),i=a(2),s=a(39),n=Object.defineProperty;t.f=r?n:function(e,t,a){if(i(e),t=s(t,!0),i(a),o)try{return n(e,t,a)}catch(e){}if('get'in a||'set'in a)throw TypeError('Accessors not supported');return'value'in a&&(e[t]=a.value),e}},function(e){function t(e){'@babel/helpers - typeof';return t='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},t(e)}e.exports=function(e){return'object'===t(e)?null!==e:'function'==typeof e}},function(e,t,a){function r(e){'@babel/helpers - typeof';return r='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},r(e)}var o=a(0),i=a(31).f,s=a(4),n=a(11),l=a(24),p=a(70),c=a(47);e.exports=function(e,t){var a,d,m,g,u,h,y=e.target,f=e.global,b=e.stat;if(d=f?o:b?o[y]||l(y,{}):(o[y]||{}).prototype,d)for(m in t){if(u=t[m],e.noTargetGet?(h=i(d,m),g=h&&h.value):g=d[m],a=c(f?m:y+(b?'.':'#')+m,e.forced),!a&&void 0!==g){if(r(u)===r(g))continue;p(u,g)}(e.sham||g&&g.sham)&&s(u,'sham',!0),n(d,m,u,e)}}},function(e,t,a){var r=a(44),o=a(0),i=function(e){return'function'==typeof e?e:void 0};e.exports=function(e,t){return 2>arguments.length?i(r[e])||i(o[e]):r[e]&&r[e][t]||o[e]&&o[e][t]}},function(e,t,a){var r=a(0),o=a(4),i=a(3),s=a(24),n=a(26),l=a(14),p=l.get,c=l.enforce,d=(String+'').split('String');(e.exports=function(e,t,a,n){var l=!!n&&!!n.unsafe,p=!!n&&!!n.enumerable,m=!!n&&!!n.noTargetGet;return('function'==typeof a&&('string'==typeof t&&!i(a,'name')&&o(a,'name',t),c(a).source=d.join('string'==typeof t?t:'')),e===r)?void(p?e[t]=a:s(t,a)):void(l?!m&&e[t]&&(p=!0):delete e[t],p?e[t]=a:o(e,t,a))})(Function.prototype,'toString',function(){return'function'==typeof this&&p(this).source||n(this)})},function(e){e.exports=function(e){if('function'!=typeof e)throw TypeError(e+' is not a function');return e}},function(e){e.exports=!1},function(e,t,a){var r,o,i,s=a(64),n=a(0),l=a(8),p=a(4),c=a(3),d=a(27),m=a(28),g=n.WeakMap,u=function(e){return i(e)?o(e):r(e,{})};if(s){var h=new g,y=h.get,f=h.has,b=h.set;r=function(e,t){return b.call(h,e,t),t},o=function(e){return y.call(h,e)||{}},i=function(e){return f.call(h,e)}}else{var v=d('state');m[v]=!0,r=function(e,t){return p(e,v,t),t},o=function(e){return c(e,v)?e[v]:{}},i=function(e){return c(e,v)}}e.exports={set:r,get:o,has:i,enforce:u,getterFor:function(e){return function(t){var a;if(!l(t)||(a=o(t)).type!==e)throw TypeError('Incompatible receiver, '+e+' required');return a}}}},function(e){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},function(e){e.exports={}},function(e,t,a){'use strict';var r=a(12),o=function(e){var t,a;this.promise=new e(function(e,r){if(t!==void 0||a!==void 0)throw TypeError('Bad Promise constructor');t=e,a=r}),this.resolve=r(t),this.reject=r(a)};e.exports.f=function(e){return new o(e)}},function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,a){var r=a(69),o=a(30);e.exports=function(e){return r(o(e))}},function(e,t,a){function r(e){'@babel/helpers - typeof';return r='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},r(e)}var o=a(2),i=a(90),s=a(46),n=a(52),l=a(91),p=a(92),c=function(e,t){this.stopped=e,this.result=t},d=e.exports=function(e,t,a,d,m){var g,u,h,y,f,b,v,x=n(t,a,d?2:1);if(m)g=e;else{if(u=l(e),'function'!=typeof u)throw TypeError('Target is not iterable');if(i(u)){for(h=0,y=s(e.length);y>h;h++)if(f=d?x(o(v=e[h])[0],v[1]):x(e[h]),f&&f instanceof c)return f;return new c(!1)}g=u.call(e)}for(b=g.next;!(v=b.call(g)).done;)if(f=p(g,x,v.value,d),'object'==r(f)&&f&&f instanceof c)return f;return new c(!1)};d.stop=function(e){return new c(!0,e)}},function(e){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,a){var r=a(60);a(98),a(99),a(100),a(101),e.exports=r},function(e,t,a){var r=a(1),o=r('toStringTag'),i={};i[o]='z',e.exports='[object z]'===i+''},function(e,t,a){var r=a(0),o=a(4);e.exports=function(e,t){try{o(r,e,t)}catch(a){r[e]=t}return t}},function(e,t,a){var r=a(0),o=a(8),i=r.document,s=o(i)&&o(i.createElement);e.exports=function(e){return s?i.createElement(e):{}}},function(e,t,a){var r=a(37),o=Function.toString;'function'!=typeof r.inspectSource&&(r.inspectSource=function(e){return o.call(e)}),e.exports=r.inspectSource},function(e,t,a){var r=a(36),o=a(40),i=r('keys');e.exports=function(e){return i[e]||(i[e]=o(e))}},function(e){e.exports={}},function(e){var t=Math.ceil,a=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(0<e?a:t)(e)}},function(e){e.exports=function(e){if(e==void 0)throw TypeError('Can\'t call method on '+e);return e}},function(e,t,a){var r=a(6),o=a(68),i=a(18),s=a(19),n=a(39),l=a(3),p=a(38),c=Object.getOwnPropertyDescriptor;t.f=r?c:function(e,t){if(e=s(e),t=n(t,!0),p)try{return c(e,t)}catch(e){}return l(e,t)?i(!o.f.call(e,t),e[t]):void 0}},function(e){e.exports=['constructor','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','toLocaleString','toString','valueOf']},function(e,t,a){var r=a(3),o=a(77),i=a(27),s=a(78),n=i('IE_PROTO'),l=Object.prototype;e.exports=s?Object.getPrototypeOf:function(e){return e=o(e),r(e,n)?e[n]:'function'==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?l:null}},function(e,t,a){var r,o=a(2),i=a(79),s=a(32),n=a(28),l=a(49),p=a(25),c=a(27),d='>',m='<',g='prototype',u='script',h=c('IE_PROTO'),y=function(){},f=function(e){return m+u+d+e+m+'/'+u+d},b=function(e){e.write(f('')),e.close();var t=e.parentWindow.Object;return e=null,t},v=function(){var e,t=p('iframe');return t.style.display='none',l.appendChild(t),t.src='java'+u+':'+'',e=t.contentWindow.document,e.open(),e.write(f('document.F=Object')),e.close(),e.F},x=function(){try{r=document.domain&&new ActiveXObject('htmlfile')}catch(e){}x=r?b(r):v();for(var e=s.length;e--;)delete x[g][s[e]];return x()};n[h]=!0,e.exports=Object.create||function(e,t){var a;return null===e?a=x():(y[g]=o(e),a=new y,y[g]=null,a[h]=e),void 0===t?a:i(a,t)}},function(e,t,a){var r=a(7).f,o=a(3),i=a(1),s=i('toStringTag');e.exports=function(e,t,a){e&&!o(e=a?e:e.prototype,s)&&r(e,s,{configurable:!0,value:t})}},function(e,t,a){var r=a(13),o=a(37);(e.exports=function(e,t){return o[e]||(o[e]=t===void 0?{}:t)})('versions',[]).push({version:'3.6.4',mode:r?'pure':'global',copyright:'\xA9 2020 Denis Pushkarev (zloirock.ru)'})},function(e,t,a){var r=a(0),o=a(24),i='__core-js_shared__',s=r[i]||o(i,{});e.exports=s},function(e,t,a){var r=a(6),o=a(5),i=a(25);e.exports=!r&&!o(function(){return 7!=Object.defineProperty(i('div'),'a',{get:function(){return 7}}).a})},function(e,t,a){var r=a(8);e.exports=function(e,t){if(!r(e))return e;var a,o;if(t&&'function'==typeof(a=e.toString)&&!r(o=a.call(e)))return o;if('function'==typeof(a=e.valueOf)&&!r(o=a.call(e)))return o;if(!t&&'function'==typeof(a=e.toString)&&!r(o=a.call(e)))return o;throw TypeError('Can\'t convert object to primitive value')}},function(e){var t=0,a=Math.random();e.exports=function(e){return'Symbol('+((e===void 0?'':e)+'')+')_'+(++t+a).toString(36)}},function(e,t,a){var r=a(5);e.exports=!!Object.getOwnPropertySymbols&&!r(function(){return!(Symbol()+'')})},function(e,t,a){var r=a(23),o=a(15),i=a(1),s=i('toStringTag'),n='Arguments'==o(function(){return arguments}()),l=function(e,t){try{return e[t]}catch(e){}};e.exports=r?o:function(e){var t,a,r;return e===void 0?'Undefined':null===e?'Null':'string'==typeof(a=l(t=Object(e),s))?a:n?o(t):'Object'==(r=o(t))&&'function'==typeof t.callee?'Arguments':r}},function(e,t,a){'use strict';var r=a(9),o=a(76),i=a(33),s=a(50),n=a(35),l=a(4),p=a(11),c=a(1),d=a(13),m=a(16),g=a(48),u=g.IteratorPrototype,h=g.BUGGY_SAFARI_ITERATORS,y=c('iterator'),f='keys',b='values',v='entries',x=function(){return this};e.exports=function(e,t,a,c,g,T,E){o(a,t,c);var k,O,I,P=function(e){return e===g&&_?_:!h&&e in C?C[e]:e===f?function(){return new a(this,e)}:e===b?function(){return new a(this,e)}:e===v?function(){return new a(this,e)}:function(){return new a(this)}},A=t+' Iterator',L=!1,C=e.prototype,S=C[y]||C['@@iterator']||g&&C[g],_=!h&&S||P(g),w='Array'==t?C.entries||S:S;if(w&&(k=i(w.call(new e)),u!==Object.prototype&&k.next&&(!d&&i(k)!==u&&(s?s(k,u):'function'!=typeof k[y]&&l(k,y,x)),n(k,A,!0,!0),d&&(m[A]=x))),g==b&&S&&S.name!==b&&(L=!0,_=function(){return S.call(this)}),(!d||E)&&C[y]!==_&&l(C,y,_),m[t]=_,g)if(O={values:P(b),keys:T?_:P(f),entries:P(v)},E)for(I in O)(h||L||!(I in C))&&p(C,I,O[I]);else r({target:t,proto:!0,forced:h||L},O);return O}},function(e,t,a){var r=a(0);e.exports=r},function(e,t,a){var r=a(3),o=a(19),s=a(73).indexOf,i=a(28);e.exports=function(e,t){var a,n=o(e),l=0,p=[];for(a in n)!r(i,a)&&r(n,a)&&p.push(a);for(;t.length>l;)r(n,a=t[l++])&&(~s(p,a)||p.push(a));return p}},function(e,t,a){var r=a(29),o=Math.min;e.exports=function(e){return 0<e?o(r(e),9007199254740991):0}},function(e,t,a){var r=a(5),o=/#|\.prototype\./,i=function(e,t){var a=n[s(e)];return!(a!=p)||a!=l&&('function'==typeof t?r(t):!!t)},s=i.normalize=function(e){return(e+'').replace(o,'.').toLowerCase()},n=i.data={},l=i.NATIVE='N',p=i.POLYFILL='P';e.exports=i},function(e,t,a){'use strict';var r,o,i,s=a(33),n=a(4),l=a(3),p=a(1),c=a(13),d=p('iterator'),m=!1;[].keys&&(i=[].keys(),'next'in i?(o=s(s(i)),o!==Object.prototype&&(r=o)):m=!0),r==void 0&&(r={}),c||l(r,d)||n(r,d,function(){return this}),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:m}},function(e,t,a){var r=a(10);e.exports=r('document','documentElement')},function(e,t,a){var r=a(2),o=a(81);e.exports=Object.setPrototypeOf||('__proto__'in{}?function(){var e,t=!1,a={};try{e=Object.getOwnPropertyDescriptor(Object.prototype,'__proto__').set,e.call(a,[]),t=a instanceof Array}catch(e){}return function(a,i){return r(a),o(i),t?e.call(a,i):a.__proto__=i,a}}():void 0)},function(e,t,a){var r=a(0);e.exports=r.Promise},function(e,t,a){var r=a(12);e.exports=function(e,t,a){return(r(e),void 0===t)?e:0===a?function(){return e.call(t)}:1===a?function(r){return e.call(t,r)}:2===a?function(r,a){return e.call(t,r,a)}:3===a?function(r,a,o){return e.call(t,r,a,o)}:function(){return e.apply(t,arguments)}}},function(e,t,a){var r=a(2),o=a(12),i=a(1),s=i('species');e.exports=function(e,t){var a,i=r(e).constructor;return i===void 0||(a=r(i)[s])==void 0?t:o(a)}},function(e,t,a){var r,o,i,s=a(0),n=a(5),l=a(15),p=a(52),c=a(49),d=a(25),m=a(55),g=s.location,u=s.setImmediate,h=s.clearImmediate,y=s.process,f=s.MessageChannel,b=s.Dispatch,v=0,x={},T='onreadystatechange',E=function(e){if(x.hasOwnProperty(e)){var t=x[e];delete x[e],t()}},k=function(e){return function(){E(e)}},O=function(e){E(e.data)},I=function(e){s.postMessage(e+'',g.protocol+'//'+g.host)};u&&h||(u=function(e){for(var t=[],a=1;arguments.length>a;)t.push(arguments[a++]);return x[++v]=function(){('function'==typeof e?e:Function(e)).apply(void 0,t)},r(v),v},h=function(e){delete x[e]},'process'==l(y)?r=function(e){y.nextTick(k(e))}:b&&b.now?r=function(e){b.now(k(e))}:f&&!m?(o=new f,i=o.port2,o.port1.onmessage=O,r=p(i.postMessage,i,1)):!s.addEventListener||'function'!=typeof postMessage||s.importScripts||n(I)?T in d('script')?r=function(e){c.appendChild(d('script'))[T]=function(){c.removeChild(this),E(e)}}:r=function(e){setTimeout(k(e),0)}:(r=I,s.addEventListener('message',O,!1))),e.exports={set:u,clear:h}},function(e,t,a){var r=a(56);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(e,t,a){var r=a(10);e.exports=r('navigator','userAgent')||''},function(e,t,a){var r=a(2),o=a(8),i=a(17);e.exports=function(e,t){if(r(e),o(t)&&t.constructor===e)return t;var a=i.f(e),s=a.resolve;return s(t),a.promise}},function(e,t,a){'use strict';var r=a(9),o=a(12),i=a(17),s=a(21),n=a(20);r({target:'Promise',stat:!0},{allSettled:function(e){var t=this,a=i.f(t),r=a.resolve,l=a.reject,p=s(function(){var a=o(t.resolve),i=[],s=0,l=1;n(e,function(e){var o=s++,n=!1;i.push(void 0),l++,a.call(t,e).then(function(e){n||(n=!0,i[o]={status:'fulfilled',value:e},--l||r(i))},function(t){n||(n=!0,i[o]={status:'rejected',reason:t},--l||r(i))})}),--l||r(i)});return p.error&&l(p.value),a.promise}})},function(){},function(e,t,a){a(61),a(66),a(82),a(86),a(58),a(97);var r=a(44);e.exports=r.Promise},function(e,t,a){var r=a(23),o=a(11),i=a(65);r||o(Object.prototype,'toString',i,{unsafe:!0})},function(e){function t(e){'@babel/helpers - typeof';return t='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},t(e)}var a=function(){return this}();try{a=a||new Function('return this')()}catch(r){'object'===('undefined'==typeof window?'undefined':t(window))&&(a=window)}e.exports=a},function(e,t,a){function r(e){'@babel/helpers - typeof';return r='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},r(e)}var o=a(41);e.exports=o&&!Symbol.sham&&'symbol'==r(Symbol.iterator)},function(e,t,a){var r=a(0),o=a(26),i=r.WeakMap;e.exports='function'==typeof i&&/native code/.test(o(i))},function(e,t,a){'use strict';var r=a(23),o=a(42);e.exports=r?{}.toString:function(){return'[object '+o(this)+']'}},function(e,t,a){'use strict';var r=a(67).charAt,o=a(14),i=a(43),s='String Iterator',n=o.set,l=o.getterFor(s);i(String,'String',function(e){n(this,{type:s,string:e+'',index:0})},function(){var e,t=l(this),a=t.string,o=t.index;return o>=a.length?{value:void 0,done:!0}:(e=r(a,o),t.index+=e.length,{value:e,done:!1})})},function(e,t,a){var r=a(29),o=a(30),i=function(e){return function(t,a){var i,s,n=o(t)+'',l=r(a),p=n.length;return 0>l||l>=p?e?'':void 0:(i=n.charCodeAt(l),55296>i||56319<i||l+1===p||56320>(s=n.charCodeAt(l+1))||57343<s?e?n.charAt(l):i:e?n.slice(l,l+2):(i-55296<<10)+(s-56320)+65536)}};e.exports={codeAt:i(!1),charAt:i(!0)}},function(e,t){'use strict';var a={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,o=r&&!a.call({1:2},1);t.f=o?function(e){var t=r(this,e);return!!t&&t.enumerable}:a},function(e,t,a){var r=a(5),o=a(15),i=''.split;e.exports=r(function(){return!Object('z').propertyIsEnumerable(0)})?function(e){return'String'==o(e)?i.call(e,''):Object(e)}:Object},function(e,t,a){var r=a(3),o=a(71),s=a(31),n=a(7);e.exports=function(e,t){for(var a,l=o(t),p=n.f,c=s.f,d=0;d<l.length;d++)a=l[d],r(e,a)||p(e,a,c(t,a))}},function(e,t,a){var r=a(10),o=a(72),i=a(75),s=a(2);e.exports=r('Reflect','ownKeys')||function(e){var t=o.f(s(e)),a=i.f;return a?t.concat(a(e)):t}},function(e,t,a){var r=a(45),o=a(32),i=o.concat('length','prototype');t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},function(e,t,a){var r=a(19),o=a(46),i=a(74),s=function(e){return function(t,a,s){var n,l=r(t),p=o(l.length),c=i(s,p);if(e&&a!=a){for(;p>c;)if(n=l[c++],n!=n)return!0;}else for(;p>c;c++)if((e||c in l)&&l[c]===a)return e||c||0;return!e&&-1}};e.exports={includes:s(!0),indexOf:s(!1)}},function(e,t,a){var r=a(29),o=Math.max,i=Math.min;e.exports=function(e,t){var a=r(e);return 0>a?o(a+t,0):i(a,t)}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,a){'use strict';var r=a(48).IteratorPrototype,o=a(34),i=a(18),s=a(35),n=a(16),l=function(){return this};e.exports=function(e,t,a){var p=t+' Iterator';return e.prototype=o(r,{next:i(1,a)}),s(e,p,!1,!0),n[p]=l,e}},function(e,t,a){var r=a(30);e.exports=function(e){return Object(r(e))}},function(e,t,a){var r=a(5);e.exports=!r(function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})},function(e,t,a){var r=a(6),o=a(7),i=a(2),s=a(80);e.exports=r?Object.defineProperties:function(e,t){i(e);for(var a,r=s(t),n=r.length,l=0;n>l;)o.f(e,a=r[l++],t[a]);return e}},function(e,t,a){var r=a(45),o=a(32);e.exports=Object.keys||function(e){return r(e,o)}},function(e,t,a){var r=a(8);e.exports=function(e){if(!r(e)&&null!==e)throw TypeError('Can\'t set '+(e+' as a prototype'));return e}},function(e,t,a){var r=a(0),o=a(83),i=a(84),s=a(4),n=a(1),l=n('iterator'),p=n('toStringTag'),c=i.values;for(var d in o){var m=r[d],g=m&&m.prototype;if(g){if(g[l]!==c)try{s(g,l,c)}catch(e){g[l]=c}if(g[p]||s(g,p,d),o[d])for(var u in i)if(g[u]!==i[u])try{s(g,u,i[u])}catch(e){g[u]=i[u]}}}},function(e){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,a){'use strict';var r=a(19),o=a(85),i=a(16),s=a(14),n=a(43),l='Array Iterator',p=s.set,c=s.getterFor(l);e.exports=n(Array,'Array',function(e,t){p(this,{type:l,target:r(e),index:0,kind:t})},function(){var e=c(this),t=e.target,a=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):'keys'==a?{value:r,done:!1}:'values'==a?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}},'values'),i.Arguments=i.Array,o('keys'),o('values'),o('entries')},function(e,t,a){var r=a(1),o=a(34),i=a(7),s=r('unscopables'),n=Array.prototype;n[s]==void 0&&i.f(n,s,{configurable:!0,value:o(null)}),e.exports=function(e){n[s][e]=!0}},function(e,t,a){'use strict';var r,o,i,s,n=a(9),l=a(13),p=a(0),c=a(10),d=a(51),m=a(11),g=a(87),u=a(35),h=a(88),y=a(8),f=a(12),b=a(89),v=a(15),x=a(26),T=a(20),E=a(93),k=a(53),O=a(54).set,I=a(94),P=a(57),A=a(95),L=a(17),S=a(21),C=a(14),_=a(47),w=a(1),R=a(96),M=w('species'),D='Promise',N=C.get,j=C.set,H=C.getterFor(D),F=d,B=p.TypeError,G=p.document,z=p.process,W=c('fetch'),U=L.f,K=U,V='process'==v(z),Y=!!(G&&G.createEvent&&p.dispatchEvent),X='unhandledrejection',q=0,Z=1,Q=1,J=2,$=_(D,function(){var e=x(F)!==F+'';if(!e){if(66===R)return!0;if(!V&&'function'!=typeof PromiseRejectionEvent)return!0}if(l&&!F.prototype['finally'])return!0;if(51<=R&&/native code/.test(F))return!1;var t=F.resolve(1),a=function(e){e(function(){},function(){})},r=t.constructor={};return r[M]=a,!(t.then(function(){})instanceof a)}),ee=$||!E(function(e){F.all(e)['catch'](function(){})}),te=function(e){var t;return!!(y(e)&&'function'==typeof(t=e.then))&&t},ae=function(e,t,a){if(!t.notified){t.notified=!0;var r=t.reactions;I(function(){for(var o=t.value,i=t.state==Z,s=0;r.length>s;){var n,l,p,c=r[s++],d=i?c.ok:c.fail,m=c.resolve,g=c.reject,u=c.domain;try{d?(!i&&(t.rejection===J&&se(e,t),t.rejection=Q),!0===d?n=o:(u&&u.enter(),n=d(o),u&&(u.exit(),p=!0)),n===c.promise?g(B('Promise-chain cycle')):(l=te(n))?l.call(n,m,g):m(n)):g(o)}catch(e){u&&!p&&u.exit(),g(e)}}t.reactions=[],t.notified=!1,a&&!t.rejection&&oe(e,t)})}},re=function(e,t,a){var r,o;Y?(r=G.createEvent('Event'),r.promise=t,r.reason=a,r.initEvent(e,!1,!0),p.dispatchEvent(r)):r={promise:t,reason:a},(o=p['on'+e])?o(r):e===X&&A('Unhandled promise rejection',a)},oe=function(e,t){O.call(p,function(){var a,r=t.value,o=ie(t);if(o&&(a=S(function(){V?z.emit('unhandledRejection',r,e):re(X,e,r)}),t.rejection=V||ie(t)?J:Q,a.error))throw a.value})},ie=function(e){return e.rejection!==Q&&!e.parent},se=function(e,t){O.call(p,function(){V?z.emit('rejectionHandled',e):re('rejectionhandled',e,t.value)})},ne=function(e,t,a,r){return function(o){e(t,a,o,r)}},le=function(e,t,a,r){t.done||(t.done=!0,r&&(t=r),t.value=a,t.state=2,ae(e,t,!0))},pe=function e(t,a,r,o){if(!a.done){a.done=!0,o&&(a=o);try{if(t===r)throw B('Promise can\'t be resolved itself');var i=te(r);i?I(function(){var o={done:!1};try{i.call(r,ne(e,t,o,a),ne(le,t,o,a))}catch(e){le(t,o,e,a)}}):(a.value=r,a.state=Z,ae(t,a,!1))}catch(e){le(t,{done:!1},e,a)}}};$&&(F=function(e){b(this,F,D),f(e),r.call(this);var t=N(this);try{e(ne(pe,this,t),ne(le,this,t))}catch(e){le(this,t,e)}},r=function(){j(this,{type:D,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:q,value:void 0})},r.prototype=g(F.prototype,{then:function(e,t){var a=H(this),r=U(k(this,F));return r.ok='function'!=typeof e||e,r.fail='function'==typeof t&&t,r.domain=V?z.domain:void 0,a.parent=!0,a.reactions.push(r),a.state!=q&&ae(this,a,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new r,t=N(e);this.promise=e,this.resolve=ne(pe,e,t),this.reject=ne(le,e,t)},L.f=U=function(e){return e===F||e===i?new o(e):K(e)},!l&&'function'==typeof d&&(s=d.prototype.then,m(d.prototype,'then',function(e,t){var a=this;return new F(function(e,t){s.call(a,e,t)}).then(e,t)},{unsafe:!0}),'function'==typeof W&&n({global:!0,enumerable:!0,forced:!0},{fetch:function(){return P(F,W.apply(p,arguments))}}))),n({global:!0,wrap:!0,forced:$},{Promise:F}),u(F,D,!1,!0),h(D),i=c(D),n({target:D,stat:!0,forced:$},{reject:function(e){var t=U(this);return t.reject.call(void 0,e),t.promise}}),n({target:D,stat:!0,forced:l||$},{resolve:function(e){return P(l&&this===i?F:this,e)}}),n({target:D,stat:!0,forced:ee},{all:function(e){var t=this,a=U(t),r=a.resolve,o=a.reject,i=S(function(){var a=f(t.resolve),i=[],s=0,n=1;T(e,function(e){var l=s++,p=!1;i.push(void 0),n++,a.call(t,e).then(function(e){p||(p=!0,i[l]=e,--n||r(i))},o)}),--n||r(i)});return i.error&&o(i.value),a.promise},race:function(e){var t=this,a=U(t),r=a.reject,o=S(function(){var o=f(t.resolve);T(e,function(e){o.call(t,e).then(a.resolve,r)})});return o.error&&r(o.value),a.promise}})},function(e,t,a){var r=a(11);e.exports=function(e,t,a){for(var o in t)r(e,o,t[o],a);return e}},function(e,t,a){'use strict';var r=a(10),o=a(7),i=a(1),s=a(6),n=i('species');e.exports=function(e){var t=r(e),a=o.f;s&&t&&!t[n]&&a(t,n,{configurable:!0,get:function(){return this}})}},function(e){e.exports=function(e,t,a){if(!(e instanceof t))throw TypeError('Incorrect '+(a?a+' ':'')+'invocation');return e}},function(e,t,a){var r=a(1),o=a(16),i=r('iterator'),s=Array.prototype;e.exports=function(e){return e!==void 0&&(o.Array===e||s[i]===e)}},function(e,t,a){var r=a(42),o=a(16),i=a(1),s=i('iterator');e.exports=function(e){if(e!=void 0)return e[s]||e['@@iterator']||o[r(e)]}},function(e,t,a){var r=a(2);e.exports=function(e,t,a,o){try{return o?t(r(a)[0],a[1]):t(a)}catch(t){var i=e['return'];throw void 0!==i&&r(i.call(e)),t}}},function(e,t,a){var r=a(1),o=r('iterator'),i=!1;try{var s=0,n={next:function(){return{done:!!s++}},return:function(){i=!0}};n[o]=function(){return this},Array.from(n,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!i)return!1;var a=!1;try{var r={};r[o]=function(){return{next:function(){return{done:a=!0}}}},e(r)}catch(e){}return a}},function(e,t,a){var r,o,i,s,n,l,p,c,d=a(0),m=a(31).f,g=a(15),u=a(54).set,h=a(55),y=d.MutationObserver||d.WebKitMutationObserver,f=d.process,b=d.Promise,v='process'==g(f),x=m(d,'queueMicrotask'),T=x&&x.value;T||(r=function(){var e,t;for(v&&(e=f.domain)&&e.exit();o;){t=o.fn,o=o.next;try{t()}catch(e){throw o?s():i=void 0,e}}i=void 0,e&&e.enter()},v?s=function(){f.nextTick(r)}:y&&!h?(n=!0,l=document.createTextNode(''),new y(r).observe(l,{characterData:!0}),s=function(){l.data=n=!n}):b&&b.resolve?(p=b.resolve(void 0),c=p.then,s=function(){c.call(p,r)}):s=function(){u.call(d,r)}),e.exports=T||function(e){var t={fn:e,next:void 0};i&&(i.next=t),o||(o=t,s()),i=t}},function(e,t,a){var r=a(0);e.exports=function(e,t){var a=r.console;a&&a.error&&(1===arguments.length?a.error(e):a.error(e,t))}},function(e,t,a){var r,o,i=a(0),s=a(56),n=i.process,l=n&&n.versions,p=l&&l.v8;p?(r=p.split('.'),o=r[0]+r[1]):s&&(r=s.match(/Edge\/(\d+)/),(!r||74<=r[1])&&(r=s.match(/Chrome\/(\d+)/),r&&(o=r[1]))),e.exports=o&&+o},function(e,t,a){'use strict';var r=a(9),o=a(13),i=a(51),s=a(5),n=a(10),l=a(53),p=a(57),c=a(11),d=!!i&&s(function(){i.prototype['finally'].call({then:function(){}},function(){})});r({target:'Promise',proto:!0,real:!0,forced:d},{finally:function(t){var a=l(this,n('Promise')),e='function'==typeof t;return this.then(e?function(e){return p(a,t()).then(function(){return e})}:t,e?function(r){return p(a,t()).then(function(){throw r})}:t)}}),o||'function'!=typeof i||i.prototype['finally']||c(i.prototype,'finally',n('Promise').prototype['finally'])},function(e,t,a){'use strict';var r=a(9),o=a(6),i=a(33),s=a(50),n=a(34),l=a(7),p=a(18),c=a(20),d=a(4),m=a(14),g=m.set,u=m.getterFor('AggregateError'),h=function(e,t){var a=this;if(!(a instanceof h))return new h(e,t);s&&(a=s(new Error(t),i(a)));var r=[];return c(e,r.push,r),o?g(a,{errors:r,type:'AggregateError'}):a.errors=r,void 0!==t&&d(a,'message',t+''),a};h.prototype=n(Error.prototype,{constructor:p(5,h),message:p(5,''),name:p(5,'AggregateError')}),o&&l.f(h.prototype,'errors',{get:function(){return u(this).errors},configurable:!0}),r({global:!0},{AggregateError:h})},function(e,t,a){a(58)},function(e,t,a){'use strict';var r=a(9),o=a(17),i=a(21);r({target:'Promise',stat:!0},{try:function(e){var t=o.f(this),a=i(e);return(a.error?t.reject:t.resolve)(a.value),t.promise}})},function(e,t,a){'use strict';var r=a(9),o=a(12),i=a(10),s=a(17),n=a(21),l=a(20),p='No one promise resolved';r({target:'Promise',stat:!0},{any:function(e){var t=this,a=s.f(t),r=a.resolve,c=a.reject,d=n(function(){var a=o(t.resolve),s=[],n=0,d=1,m=!1;l(e,function(e){var o=n++,l=!1;s.push(void 0),d++,a.call(t,e).then(function(e){l||m||(m=!0,r(e))},function(t){l||m||(l=!0,s[o]=t,--d||c(new(i('AggregateError'))(s,p)))})}),--d||c(new(i('AggregateError'))(s,p))});return d.error&&c(d.value),a.promise}})},function(e,t,a){'use strict';function r(e){'@babel/helpers - typeof';return r='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},r(e)}function o(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}function i(e,t){for(var a,r=0;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,'value'in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function s(e,t,a){return t&&i(e.prototype,t),a&&i(e,a),e}function n(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}function l(e,t){for(var a,r=0;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,'value'in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function p(e,t,a){return t&&l(e.prototype,t),a&&l(e,a),e}function c(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}function d(e,t){for(var a,r=0;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,'value'in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function m(e,t,a){return t&&d(e.prototype,t),a&&d(e,a),e}function g(e){'@babel/helpers - typeof';return g='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},g(e)}function u(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}function h(e,t){for(var a,r=0;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,'value'in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function y(e,t,a){return t&&h(e.prototype,t),a&&h(e,a),e}function f(e,t){return t&&('object'===g(t)||'function'==typeof t)?t:b(e)}function b(e){if(void 0===e)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return e}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}function x(e,t){if('function'!=typeof t&&null!==t)throw new TypeError('Super expression must either be null or a function');e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}function T(e,t){return T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},T(e,t)}function E(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}function k(e,t){for(var a,r=0;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,'value'in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function O(e,t,a){return t&&k(e.prototype,t),a&&k(e,a),e}function I(e){'@babel/helpers - typeof';return I='function'==typeof Symbol&&'symbol'==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&'function'==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?'symbol':typeof e},I(e)}function P(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}function A(e,t){for(var a,r=0;r<t.length;r++)a=t[r],a.enumerable=a.enumerable||!1,a.configurable=!0,'value'in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}function L(e,t,a){return t&&A(e.prototype,t),a&&A(e,a),e}function C(e,t){return t&&('object'===I(t)||'function'==typeof t)?t:_(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}function _(e){if(void 0===e)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return e}function w(e,t){if('function'!=typeof t&&null!==t)throw new TypeError('Super expression must either be null or a function');e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}function R(e,t){return R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},R(e,t)}var M=Math.round,D=Math.max;a.r(t);var N=a(59),j=function(){function e(){o(this,e)}return s(e,null,[{key:'extend',value:function(){for(var e=1;e<arguments.length;e++)for(var t in arguments[e])arguments[e].hasOwnProperty(t)&&('object'===r(arguments[0][t])&&'object'===r(arguments[e][t])?this.extend(arguments[0][t],arguments[e][t]):arguments[0][t]=arguments[e][t]);return arguments[0]}},{key:'stripHTML',value:function(t){var a=document.createElement('div');return a.innerHTML=e.htmlDecode(t),a.textContent||a.innerText||''}},{key:'htmlDecode',value:function(e){return e&&''!==e?new DOMParser().parseFromString(e,'text/html').documentElement.textContent:''}},{key:'project',value:function(e,t,a,r,o){return r+(o-r)*(e-t)/(a-t)}},{key:'constrain',value:function(e,t,a){return Math.min(a,D(t,e))}},{key:'findClosest',value:function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:'.';if(!e)return null;for('.'===t.substr(0,1)&&(t=t.substr(1));!e.classList.contains(t)&&(e=e.parentElement););return e}},{key:'isMobileDevice',value:function(){var e=!1;return function(t){(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(t.substr(0,4)))&&(e=!0)}(navigator.userAgent||navigator.vendor||window.opera),e}}]),e}(),H=j,F=function(){function e(t,a,r){n(this,e),this.texts=t,this.selector=a,this.descriptionTop=document.createElement('div'),this.descriptionTop.classList.add('h5p-agamotto-description-top'),this.descriptionTop.style.opacity=1,this.descriptionTop.innerHTML=t[0],this.descriptionTop.setAttribute('aria-hidden','true'),this.descriptionBottom=document.createElement('div'),this.descriptionBottom.classList.add('h5p-agamotto-description-bottom'),this.descriptionBottom.style.opacity=0,this.descriptionBottom.innerHTML=t[1],this.descriptionsContainer=document.createElement('div'),this.descriptionsContainer.classList.add('h5p-agamotto-descriptions-container'),this.descriptionsContainer.appendChild(this.descriptionTop),this.descriptionsContainer.appendChild(this.descriptionBottom),this.descriptionsContainer.addEventListener('mouseup',function(t){-1!==e.TAGS_FOR_PROPAGATION_STOPPING.indexOf(t.target.tagName)&&(t.stopPropagation(),r.xAPIInteracted())})}return p(e,[{key:'getDOM',value:function(){return this.descriptionsContainer}},{key:'getCurrentDescriptionText',value:function(){return this.descriptionTop.textContent}},{key:'setText',value:function(e,t){.5<t?(this.descriptionTop.innerHTML=this.texts[e],this.descriptionBottom.innerHTML=this.texts[H.constrain(e+1,0,this.texts.length-1)],this.descriptionTop.style.opacity=t,this.descriptionBottom.style.opacity=1-t):(this.descriptionTop.innerHTML=this.texts[H.constrain(e+1,0,this.texts.length-1)],this.descriptionBottom.innerHTML=this.texts[e],this.descriptionTop.style.opacity=1-t,this.descriptionBottom.style.opacity=t)}},{key:'resize',value:function(){var e=this,t=0;this.texts.forEach(function(a){e.descriptionBottom.innerHTML=a,t=D(t,e.descriptionBottom.offsetHeight)}),this.descriptionsContainer.style.height=t+'px'}}]),e}();F.TAGS_FOR_PROPAGATION_STOPPING=['A','EM','STRONG','SUB','SUP','SPAN'];var B=a(22),G=a.n(B),z=function(){function e(t){var a=1<arguments.length&&void 0!==arguments[1]?arguments[1]:'#000000';c(this,e),this.images=t,this.images.map(function(e){e.alt=H.stripHTML(e.alt),e.title=H.stripHTML(e.title),e.description=H.stripHTML(e.description)}),this.ratio=this.images[0].img.naturalWidth/this.images[0].img.naturalHeight;for(var r=this.images[0].img.naturalWidth,o=this.images[0].img.naturalHeight,s=0;s<this.images.length;s++){var i=r,n=o,l=this.images[s].img.naturalWidth,p=this.images[s].img.naturalHeight;l/p<this.ratio&&p>n&&(p=n,l*=n/this.images[s].img.naturalHeight),l/p>this.ratio&&l>i&&(l=i,p*=i/this.images[s].img.naturalWidth),l/p===this.ratio&&(i=D(i,l),n=D(n,p));var d=H.constrain((i-l)/2,0,i),m=H.constrain((n-p)/2,0,n),g=document.createElement('canvas');g.setAttribute('width',i),g.setAttribute('height',n);var u=g.getContext('2d');u.beginPath(),u.rect(0,0,i,n),u.fillStyle=a,u.fill(),u.drawImage(this.images[s].img,d,m,l,p);var h=new Image,y=g.toDataURL('image/jpeg');h.crossOrigin=this.images[s].img.crossOrigin,h.src=y,this.images[s].img=h}this.imageTop=document.createElement('img'),this.imageTop.classList.add('h5p-agamotto-image-top'),this.imageTop.src=t[0].img.src,this.imageTop.setAttribute('draggable','false'),this.imageTop.setAttribute('alt',this.images[0].alt),this.imageTop.setAttribute('title',this.images[0].title),this.imageTop.setAttribute('aria-label',''===this.images[0].alt?this.images[0].description:''.concat(t[0].alt,'. ').concat(this.images[0].description)),this.imageBottom=document.createElement('img'),this.imageBottom.classList.add('h5p-agamotto-image-bottom'),this.imageBottom.src=this.images[1].img.src,this.imageBottom.setAttribute('draggable','false'),this.imageBottom.setAttribute('aria-hidden',!0),this.container=document.createElement('div'),this.container.classList.add('h5p-agamotto-images-container'),this.container.appendChild(this.imageTop),this.container.appendChild(this.imageBottom)}return m(e,[{key:'getDOM',value:function(){return this.container}},{key:'getCurrentAltTag',value:function(){return this.imageTop.getAttribute('alt')}},{key:'getAltTitleTags',value:function(){return this.images.map(function(e){return e.alt||e.title})}},{key:'setImage',value:function(e,t){var a=H.constrain(e+M(1-t),0,this.images.length-1);this.imageBottom.src=this.images[H.constrain(e+1,0,this.images.length-1)].img.src,this.imageTop.src=this.images[e].img.src,this.imageTop.setAttribute('alt',this.images[a].alt),this.imageTop.setAttribute('title',this.images[a].title),this.imageTop.setAttribute('aria-label',''===this.images[a].alt?this.images[a].description:''.concat(this.images[a].alt,'. ').concat(this.images[a].description)),this.imageTop.style.opacity=t}},{key:'resize',value:function(){var e=this.container.style.height;return this.container.style.height=this.container.offsetWidth/this.ratio+'px',this.container.style.height!==e}},{key:'getRatio',value:function(){return this.ratio}},{key:'getTopOpacity',value:function(){return parseFloat(this.imageTop.style.opacity||'')}}],[{key:'loadImage',value:function(e,t){return new G.a(function(a,r){var o=new Image;if(o.onload=function(){a(o)},o.onerror=function(e){r(e)},void 0!==H5P.setSource)H5P.setSource(o,e.params.file,t);else{var i=H5P.getPath(e.params.file.path,t);o.crossOrigin=void 0===H5P.getCrossOrigin?'Anonymous':H5P.getCrossOrigin(i),o.src=i}})}}]),e}(),W=z,U=function(e){function t(e,a,r){var o;u(this,t),o=f(this,v(t).call(this)),e=H.extend({snap:!0,ticks:!1,labels:!1,startRatio:0},e),o.params=e,o.selector=a,o.parent=r,o.trackWidth=0,o.trackOffset=null,o.thumbPosition=0,o.ratio=e.startRatio,o.ticks=[],o.labels=[],o.sliderdown=!1,o.keydown=!1,o.interactionstarted=!1,o.wasUsed=!1,o.track=document.createElement('div'),o.track.classList.add('h5p-agamotto-slider-track'),o.thumb=document.createElement('div'),o.thumb.classList.add('h5p-agamotto-slider-thumb'),o.thumb.setAttribute('tabindex',0),o.thumb.setAttribute('role','slider'),o.thumb.setAttribute('aria-label',o.params.a11y.imageSlider),o.container=document.createElement('div'),o.container.classList.add('h5p-agamotto-slider-container'),o.container.appendChild(o.track),o.container.appendChild(o.thumb);var s=0;if(!0===o.params.ticks){var i=function(e){o.setPosition(parseInt(e.target.style.left)-t.TRACK_OFFSET,!0)};for(s=0;s<=o.params.size;s++)o.ticks[s]=document.createElement('div'),o.ticks[s].classList.add('h5p-agamotto-tick'),o.ticks[s].addEventListener('click',i),o.container.appendChild(o.ticks[s])}if(!0===o.params.labels)for(s=0;s<=o.params.size;s++)o.labels[s]=document.createElement('div'),o.labels[s].classList.add('h5p-agamotto-tick-label'),o.labels[s].innerHTML=o.params.labelTexts[s],o.container.appendChild(o.labels[s]);return document.addEventListener('mousemove',function(e){o.sliderdown&&o.setPosition(e,!1)}),document.addEventListener('mouseup',function(){o.sliderdown&&(o.sliderdown=!1,o.snap())}),o.track.addEventListener('mousedown',function(e){e=e||window.event,o.sliderdown=!0,o.setPosition(e,!1)}),o.thumb.addEventListener('mousedown',function(e){e=e||window.event,o.sliderdown=!0,o.setPosition(e,!1)}),o.container.addEventListener('touchstart',function(e){e=e||window.event,e.preventDefault(),e.stopPropagation(),o.setPosition(e,!1)}),o.container.addEventListener('touchmove',function(e){e=e||window.event,e.preventDefault(),e.stopPropagation(),o.setPosition(e,!1)}),o.container.addEventListener('touchend',function(e){e=e||window.event,e.preventDefault(),e.stopPropagation(),o.snap()}),o.thumb.addEventListener('keydown',function(e){if(!1===o.keydown){e=e||window.event;var t=e.which||e.keyCode;35===t?o.handleKeyMove(e,o.params.size):36===t?o.handleKeyMove(e,0):37===t||38===t?o.handleKeyMove(e,o.getCurrentItemId(!0)-1):39===t||40===t?o.handleKeyMove(e,o.getCurrentItemId(!0)+1):void 0}}),o.thumb.addEventListener('keyup',function(e){e=e||window.event;var t=e.which||e.keyCode;t===o.keydown&&(o.keydown=!1,r.xAPIInteracted(),r.xAPICompleted())}),o}return x(t,e),y(t,[{key:'handleKeyMove',value:function(e,t){e.preventDefault(),this.keydown=e.which||e.keyCode,t=H.constrain(t,0,this.params.size),this.setPosition(H.project(t,0,this.params.size,0,this.getWidth()),!0)}},{key:'handleTouchMove',value:function(e){e=e||window.event,e.preventDefault(),e.stopPropagation(),this.setPosition(e,!1)}},{key:'getCurrentItemId',value:function(){var e=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],t=this.getPosition()/this.getWidth()*this.params.size;return e&&(t=M(t)),t}},{key:'getDOM',value:function(){return this.container}},{key:'disable',value:function(){this.track.classList.add('h5p-agamotto-disabled'),this.thumb.classList.add('h5p-agamotto-disabled')}},{key:'enable',value:function(){this.track.classList.remove('h5p-agamotto-disabled'),this.thumb.classList.remove('h5p-agamotto-disabled')}},{key:'setWidth',value:function(e){this.trackWidth=e,this.track.style.width=''.concat(e,'px')}},{key:'getWidth',value:function(){return this.trackWidth}},{key:'setPosition',value:function(e,a,r){if(!this.thumb.classList.contains('h5p-agamotto-disabled')){'string'==typeof e||'number'==typeof e?e=parseInt(e):'object'===g(e)?(null===this.trackOffset&&(this.trackOffset=this.computeTrackOffset()),e=this.getPointerX(e)-this.trackOffset):e=0,e=H.constrain(e,0,this.getWidth()),!0===a?this.thumb.classList.add('h5p-agamotto-transition'):this.thumb.classList.remove('h5p-agamotto-transition'),r||(this.ratio=e/this.getWidth()),this.thumb.style.left=e+t.THUMB_OFFSET+'px';var o=M(100*(e/this.getWidth())),i=this.getCurrentItemId()||0;this.thumb.setAttribute('aria-valuetext',this.params.labels?this.labels[i].innerHTML:this.params.altTitleTexts[i]||''.concat(this.params.a11y.image,' ').concat(i+1)),this.trigger('update',{position:e,percentage:o})}}},{key:'getPosition',value:function(){return this.thumb.style.left?parseInt(this.thumb.style.left)-t.THUMB_OFFSET:0}},{key:'isUsed',value:function(){return this.sliderdown}},{key:'snap',value:function(){if(!0===this.params.snap){var e=M(H.project(this.ratio,0,1,0,this.params.size));this.setPosition(e*this.getWidth()/this.params.size,!0)}this.parent.xAPIInteracted(),this.parent.xAPICompleted()}},{key:'getPointerX',value:function(t){var e=0;return e=t.touches?t.touches[0].pageX:t.clientX,e}},{key:'resize',value:function(){this.setWidth(parseInt(this.container.offsetWidth)-2*t.TRACK_OFFSET),this.setPosition(this.getWidth()*this.ratio,!1,!0);var e=0;if(!0===this.params.ticks)for(e=0;e<this.ticks.length;e++)this.ticks[e].style.left=t.TRACK_OFFSET+e*this.getWidth()/(this.ticks.length-1)+'px';var a=0,r=!1;if(!0===this.params.labels){for(e=0;e<this.labels.length;e++){switch(a=D(a,parseInt(window.getComputedStyle(this.labels[e]).height)),e){case 0:this.labels[e].style.left=t.TRACK_OFFSET/2+'px';break;case this.labels.length-1:this.labels[e].style.right=t.TRACK_OFFSET/2+'px';break;default:var o=Math.ceil(parseInt(window.getComputedStyle(this.labels[e]).width))/2;this.labels[e].style.left=t.TRACK_OFFSET+e*this.getWidth()/(this.labels.length-1)-o+'px';}e<this.labels.length-1&&!r&&(r=this.areOverlapping(this.labels[e],this.labels[e+1]))}r?(this.labels.forEach(function(e){e.classList.add('h5p-agamotto-hidden')}),a=0):this.labels.forEach(function(e){e.classList.remove('h5p-agamotto-hidden')});var i=!0===this.params.ticks||r||0===a?0:-7;this.container.style.height=t.CONTAINER_DEFAULT_HEIGHT+a+i+'px'}}},{key:'computeTrackOffset',value:function(){var e=parseInt(window.getComputedStyle(this.container).marginLeft||0),a=H.findClosest(this.container,'h5p-question-content');if(a){var r=window.getComputedStyle(a);e+=parseInt(r.paddingLeft)+parseInt(r.marginLeft)}var o=H.findClosest(this.container,this.selector);if(o){var i=window.getComputedStyle(o);e+=parseInt(i.paddingLeft)+parseInt(i.marginLeft)}return e+=t.TRACK_OFFSET,e}},{key:'areOverlapping',value:function(e,t){var a=e.getBoundingClientRect(),r=t.getBoundingClientRect();return!(a.right<r.left||a.left>r.right||a.bottom<r.top||a.top>r.bottom)}}]),t}(H5P.EventDispatcher);U.CONTAINER_DEFAULT_HEIGHT=36,U.TRACK_OFFSET=16,U.THUMB_OFFSET=8;var K=function(){function e(t){E(this,e),this.classNameBase=t,this.container=document.createElement('div'),this.container.classList.add(''.concat(this.classNameBase,'-container')),this.spinnerElement=document.createElement('div'),this.spinnerElement.classList.add(t);var a=document.createElement('div');a.classList.add(''.concat(this.classNameBase,'-circle-head')),this.spinnerElement.appendChild(a);var r=document.createElement('div');r.classList.add(''.concat(this.classNameBase,'-circle-neck-upper')),this.spinnerElement.appendChild(r);var o=document.createElement('div');o.classList.add(''.concat(this.classNameBase,'-circle-neck-lower')),this.spinnerElement.appendChild(o);var i=document.createElement('div');i.classList.add(''.concat(this.classNameBase,'-circle-body')),this.spinnerElement.appendChild(i),this.container.appendChild(this.spinnerElement)}return O(e,[{key:'getDOM',value:function(){return this.container}},{key:'show',value:function(){this.container.classList.remove(''.concat(this.classNameBase,'-none'))}},{key:'hide',value:function(){this.container.classList.add(''.concat(this.classNameBase,'-none'))}}]),e}(),V=function(e){function t(e,a,r){var o;return(P(this,t),o=C(this,S(t).call(this,'agamotto')),!e.items)?C(o):(o.params=e,o.params.items=t.sanitizeItems(o.params.items),o.params=H.extend({items:[],behaviour:{startImage:1,snap:!0,ticks:!1,labels:!1,transparencyReplacementColor:'#000000'},a11y:{image:'Image',imageSlider:'Image slider'}},o.params),o.extras=r,o.maxItem=o.params.items.length-1,o.startImage=H.constrain(o.params.behaviour.startImage-1,0,o.maxItem),o.selector='.h5p-agamotto-wrapper',o.hasDescription=o.params.items.some(function(e){return''!==e.description}),o.id=a,o.imageContainer=void 0,o.position=0,o.imagesViewed=[],o.completed=!1,o.updateContent=function(e,t){t=M(10*t)/10,o.slider.isUsed()&&t===o.images.getTopOpacity()&&(1!==t||o.position===e)||(o.images.setImage(e,t),o.hasDescription&&o.descriptions.setText(e,t),o.position=M(e+(1-t)),!1===o.completed&&-1===o.imagesViewed.indexOf(o.position)&&o.imagesViewed.push(o.position))},o.registerDomElements=function(){o.setContent(o.createDOM())},o.createDOM=function(){var e=document.createElement('div');if(e.classList.add('h5p-agamotto'),!o.params.items||1>o.maxItem){var a=document.createElement('div');return a.classList.add('h5p-agamotto-warning'),a.innerHTML='I really need at least two images :-)',e.appendChild(a),e}o.spinner=new K('h5p-agamotto-spinner'),e.appendChild(o.spinner.getDOM());var r=[];return o.params.items.forEach(function(e){r.push(W.loadImage(e.image,o.id))}),G.a.all(r).then(function(a){if(o.images=a.map(function(e,t){return{img:e,alt:o.params.items[t].image.params.alt,title:o.params.items[t].image.params.title,description:o.params.items[t].description}}),o.spinner.hide(),o.wrapper=document.createElement('div'),o.wrapper.classList.add('h5p-agamotto-wrapper'),o.wrapper.classList.add('h5p-agamotto-passepartout-horizontal'),o.wrapper.classList.add('h5p-agamotto-passepartout-top'),o.wrapper.classList.add('h5p-agamotto-passepartout-bottom'),e.appendChild(o.wrapper),o.params.title){var r=document.createElement('div');r.classList.add('h5p-agamotto-title'),r.innerHTML='<h2>'.concat(o.params.title,'</h2>'),o.wrapper.appendChild(r)}o.images=new W(o.images,o.params.behaviour.transparencyReplacementColor),o.wrapper.appendChild(o.images.getDOM()),o.images.resize();for(var s=[],n=0;n<=o.maxItem;n++)s[n]=o.params.items[n].labelText||'';if(o.slider=new U({snap:o.params.behaviour.snap,ticks:o.params.behaviour.ticks,labels:o.params.behaviour.labels,labelTexts:s,altTitleTexts:o.images.getAltTitleTags(),startRatio:o.startImage/o.maxItem,size:o.maxItem,a11y:{image:o.params.a11y.image,imageSlider:o.params.a11y.imageSlider}},o.selector,_(o)),o.wrapper.appendChild(o.slider.getDOM()),o.slider.resize(),o.hasDescription){for(var i=[],l=0;l<=o.maxItem;l++)i[l]=o.params.items[l].description;o.descriptions=new F(i,o.selector,_(o),o.contentId),o.wrapper.appendChild(o.descriptions.getDOM()),o.descriptions.resize(),o.wrapper.classList.remove('h5p-agamotto-passepartout-bottom'),o.heightDescriptions=o.descriptions.offsetHeight}else o.heightDescriptions=0;o.params.showTitle?o.wrapper.classList.remove('h5p-agamotto-passepartout-top'):!o.hasDescription&&(o.wrapper.classList.remove('h5p-agamotto-passepartout-horizontal'),o.wrapper.classList.remove('h5p-agamotto-passepartout-top'),o.wrapper.classList.remove('h5p-agamotto-passepartout-bottom')),o.imageContainer=o.images.getDOM(),o.xAPIExperienced(),o.slider.on('update',function(e){var t=5,a=H.project(e.data.position,0+t,o.slider.getWidth()-t,0,o.maxItem),r=H.constrain(Math.floor(a),0,o.maxItem),i=1-H.constrain(a-r,0,1),s=.5*(1-Math.cos(Math.PI*i));o.updateContent(r,s)}),window.addEventListener('resize',function(){if(!o.resizeCooling){if(H.isMobileDevice()&&90===Math.abs(window.orientation)){var e=/iPhone/.test(navigator.userAgent)?screen.width:screen.height;o.wrapper.style.width=M(e/2*o.images.getRatio())+'px'}else o.wrapper.style.width='auto';o.images.resize(),o.slider.resize(),o.hasDescription&&o.descriptions.resize(),setTimeout(function(){o.trigger('resize')}),o.resizeCooling=setTimeout(function(){o.resizeCooling=null},t.RESIZE_COOLING_PERIOD)}}),o.trigger('resize')})['catch'](function(e){console.warn(e)}),e},o.announceARIA=function(e){e=void 0===e?'':H.htmlDecode(''.concat(e,' '));var t=o.descriptions?o.descriptions.getCurrentDescriptionText():'',a=''.concat(e).concat(o.images.getCurrentAltTag(),'. ').concat(t);a=H.stripHTML(a),o.read(a)},o.xAPIExperienced=function(){o.triggerXAPI('experienced')},o.xAPIInteracted=function(){o.triggerXAPI('interacted')},o.xAPICompleted=function(){o.imagesViewed.length!==o.params.items.length||o.completed||(o.triggerXAPI('completed'),o.completed=!0)},o.getTitle=function(){return H5P.createTitle(o.extras.metadata&&o.extras.metadata.title?o.extras.metadata.title:'Agamotto')},o)}return w(t,e),L(t,null,[{key:'sanitizeItems',value:function(e){return e=e.filter(function(e){return!!(e.image&&e.image.params&&e.image.params.file)||(console.warn('An image is missing. I will continue without it, but please check your settings.'),!1)}).splice(0,50).map(function(e){return e.image.params.alt=e.image.params.alt||'',e.image.params.title=e.image.params.title||'',e}),e}}]),t}(H5P.Question);V.DEFAULT_DESCRIPTION='Agamotto',V.RESIZE_COOLING_PERIOD=50;H5P=H5P||{},H5P.Agamotto=V}]);;
